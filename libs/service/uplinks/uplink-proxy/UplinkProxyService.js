"use strict";var t=this&&this.__awaiter||function(t,r,e,o){return new(e||(e=Promise))((function(n,i){function p(t){try{s(o.next(t))}catch(t){i(t)}}function y(t){try{s(o.throw(t))}catch(t){i(t)}}function s(t){var r;t.done?n(t.value):(r=t.value,r instanceof e?r:new e((function(t){t(r)}))).then(p,y)}s((o=o.apply(t,r||[])).next())}))};Object.defineProperty(exports,"__esModule",{value:!0}),exports.uplinkProxyService=exports.isNoProxy=void 0;const r=require("../../../utils/RandomUtil"),e=require("./UplinkProxyRepository"),o=require("../../../entity/UplinkProxy"),n=require("../../../packages/log"),i=require("http-proxy-agent"),p=require("https-proxy-agent"),y=require("../../../utils/CryptoUtil"),s=require("../../../common/RepoError"),c=require("../../../common"),l=require("../../system/KeyManageService");class u{static getInstance(){return this.Instance||(this.Instance=new u,l.keyManageService.subscribeReEncryptEvent(this.Instance)),this.Instance}constructor(){}getUplinkProxy(){return t(this,void 0,void 0,(function*(){const t=yield this.getEncryptedUplinkProxy();if(!t.recordList||t.recordList.length<=0)return t;const r=t.recordList[0];let e=r.http_proxy,o=r.https_proxy;const n=r.cryptoVersion;if(e&&(e=yield y.CryptoUtil.decrypt(e,n)),o&&(o=yield y.CryptoUtil.decrypt(o,n)),r.http_proxy&&!e||r.https_proxy&&!o)throw new s.RepoClientError(c.ErrorCode.InvalidEncryptionComponent,"Fail to decrypt uplink proxy.");return{id:t.recordList[0].id,http_proxy:e,https_proxy:o,no_proxy:t.recordList[0].no_proxy}}))}getEncryptedUplinkProxy(){return t(this,void 0,void 0,(function*(){const t=yield e.uplinkProxyRepository.getList();if(!t||t.total<=0){const t=new o.UplinkProxy({id:r.RandomUtil.generateUUID(),http_proxy:"",https_proxy:"",no_proxy:""});return yield e.uplinkProxyRepository.insert(t),n.OhpmLazyLogger.info("insert uplink_proxy success:",`uplinkProxy's id is ${t.id}.`),e.uplinkProxyRepository.getList()}return t}))}updateUplinkProxy(r){return t(this,void 0,void 0,(function*(){r.http_proxy&&(r.http_proxy=y.CryptoUtil.encrypt(r.http_proxy)),r.https_proxy&&(r.https_proxy=y.CryptoUtil.encrypt(r.https_proxy)),r.cryptoVersion=y.CryptoUtil.getVersion(),yield e.uplinkProxyRepository.updateById(r),n.OhpmLazyLogger.info("update uplink_proxy success:",`uplink_proxy's id is ${r.id}.`)}))}getProxyAgent(r){return t(this,void 0,void 0,(function*(){let t;!function(){if(x)return;process.removeAllListeners("warning"),process.env.NODE_TLS_REJECT_UNAUTHORIZED="0",x=!0}();try{t=new URL(r)}catch(t){return void n.OhpmLazyLogger.error(`an unknown error occurred while getting the proxy: ${r}`,t.message)}const e=yield this.getUplinkProxy();if(h(t,e.no_proxy))return;let o;if("https:"===t.protocol.trim()){const t=e.https_proxy;t&&(o=new p.HttpsProxyAgent(t))}else if("http:"===t.protocol.trim()){const t=e.http_proxy;t&&(o=new i.HttpProxyAgent(t))}return o}))}reEncrypt(r){return t(this,void 0,void 0,(function*(){n.OhpmLazyLogger.info("re-encrypt uplink-proxy.");const t=(yield exports.uplinkProxyService.getEncryptedUplinkProxy()).recordList[0],o=t.cryptoVersion;let i=t.http_proxy,p=t.https_proxy;if(i||p){if(i&&o!==r.getCryptoVersion()){const e=yield y.CryptoUtil.decrypt(i,t.cryptoVersion);i=l.keyManageService.encrypt(e,r)}if(p&&o!==r.getCryptoVersion()){const e=yield y.CryptoUtil.decrypt(p,t.cryptoVersion);p=l.keyManageService.encrypt(e,r)}if(t.http_proxy&&!i||t.https_proxy&&!p)throw n.OhpmLazyLogger.error("fail to re-encrypt uplink-proxy."),new s.RepoClientError(c.ErrorCode.InvalidEncryptionComponent,"Fail to re-encrypt uplink-proxy");t.http_proxy=i,t.https_proxy=p,t.cryptoVersion=r.getCryptoVersion(),yield e.uplinkProxyRepository.updateById(t),n.OhpmLazyLogger.info("re-encrypt uplink-proxy success.")}else n.OhpmLazyLogger.info("re-encrypt uplink-proxy done. uplink-proxy is empty!")}))}}let x=!1;function h(t,r){if(!r)return!1;const e=r.split(",");for(const r of e){if(d(r.trim(),t.hostname))return!0}return!1}function d(t,r){if(!t)return!1;if("."===t[0])return r.endsWith(t);const e=t.split("*"),o=e.length;if(1===o)return t===r;if(2===o){const[t,o]=e;return r.startsWith(t)&&r.endsWith(o)&&r.length>=t.length+o.length}return!1}exports.isNoProxy=h,exports.uplinkProxyService=u.getInstance();