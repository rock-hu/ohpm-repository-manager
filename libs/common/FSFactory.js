"use strict";var e=this&&this.__awaiter||function(e,t,r,o){return new(r||(r=Promise))((function(i,n){function s(e){try{g(o.next(e))}catch(e){n(e)}}function a(e){try{g(o.throw(e))}catch(e){n(e)}}function g(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(s,a)}g((o=o.apply(e,t||[])).next())}))},t=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.initStorage=exports.FsFactory=void 0;const r=require("../plugins/storage/LocalStorage"),o=require("../plugins/storage/SftpStorage"),i=require("../packages/config/config"),n=require("../packages/log"),s=require("./DbAndStoreType"),a=require("../plugins/storage/customStorage/CustomStorage"),g=t(require("path")),u=require("./Constants");class c{static getInstance(){return e(this,void 0,void 0,(function*(){return c.instance||(c.instance=yield this.initFSInstance()),c.instance}))}static initFSInstance(){return e(this,void 0,void 0,(function*(){if(i.config.store.type===s.StorageType.Fs){const e=new r.LocalStorage;return yield e.init(),n.OhpmLazyLogger.info('initialize "file storage" successfully.'),e}if(i.config.store.type===s.StorageType.Sftp){if(i.config.db.type===s.DbType.FileDb)throw n.OhpmLazyLogger.error(` "sftp" is configured wrong, "${s.DbType.Mysql}" must be configured when sftp storage is used.`),new Error('"sftp" is configured wrong');const e=new o.SftpStorage;return yield e.init(),n.OhpmLazyLogger.info('initialize "sftp storage" successfully.'),e}if(i.config.store.type===s.StorageType.Custom){if(i.config.db.type===s.DbType.FileDb)throw n.OhpmLazyLogger.error(` "${s.StorageType.Custom}" is configured wrong, "${s.DbType.Mysql}" must be configured when ${s.StorageType.Custom} storage is used.`),new Error(`"${s.StorageType.Custom}" is configured wrong`);try{const e=i.config.store.config.export_name,t=i.config.store.config.plugin_path;e&&t||n.OhpmLazyLogger.error(`in the ${s.StorageType.Custom} plugin, export_name and plugin_path must exist.`);const r=new(require(this.getRealPluginPath(t))[e]),o=new a.CustomStorage(r);return yield o.init(),n.OhpmLazyLogger.info('initialize "custom storage" successfully.'),o}catch(e){throw new Error(`create plugin "${i.config.store.type}" fail, fail message: ${e.message}`)}}throw new Error(`the current storage policy is not supported, config store.store_type is "${i.config.store.type}"`)}))}static getRealPluginPath(e){return g.default.isAbsolute(e)?e:g.default.join(u.Constants.WORK_DIR,e)}}exports.FsFactory=c,exports.initStorage=function(){return e(this,void 0,void 0,(function*(){yield c.getInstance()}))};