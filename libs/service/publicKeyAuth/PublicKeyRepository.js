"use strict";var r=this&&this.__awaiter||function(r,e,i,t){return new(i||(i=Promise))((function(o,n){function c(r){try{u(t.next(r))}catch(r){n(r)}}function d(r){try{u(t.throw(r))}catch(r){n(r)}}function u(r){var e;r.done?o(r.value):(e=r.value,e instanceof i?e:new i((function(r){r(e)}))).then(c,d)}u((t=t.apply(r,e||[])).next())}))};Object.defineProperty(exports,"__esModule",{value:!0}),exports.publicKeyRepository=void 0;const e=require("../../common/DbFactory"),i=require("../../common/RepoError"),t=require("../../common"),o=require("../../packages/definitions/types");exports.publicKeyRepository=new class{constructor(){this.TABLE_NAME="public_key"}insert(o){return r(this,void 0,void 0,(function*(){try{return e.commonDB.insertOne(this.TABLE_NAME,o)}catch(r){throw new i.RepoServerError(t.ErrorCode.SavePublicKeyError,"Fail to insert publicKey!",r)}}))}findByFilter(n){return r(this,void 0,void 0,(function*(){try{return e.commonDB.findByFilter(this.TABLE_NAME,{filter:{userId:n},orderBy:{keyList:["createTime"],orderList:[o.OrderType.DESC]}})}catch(r){throw new i.RepoServerError(t.ErrorCode.FindPublicKeyError,"Fail to find publicKey!",r)}}))}deleteById(o){return r(this,void 0,void 0,(function*(){try{return e.commonDB.deleteById(this.TABLE_NAME,o)}catch(r){throw new i.RepoServerError(t.ErrorCode.DeletePublicKeyError,"Fail to delete publicKey!",r)}}))}findByPublishIdFilter(n){return r(this,void 0,void 0,(function*(){try{return e.commonDB.findByFilter(this.TABLE_NAME,{filter:{publishId:n},orderBy:{keyList:["createTime"],orderList:[o.OrderType.DESC]}})}catch(r){throw new i.RepoServerError(t.ErrorCode.FindPublicKeyError,"Fail to find publicKey!",r)}}))}findPublicKey(o,n){return r(this,void 0,void 0,(function*(){try{return e.commonDB.findByFilter(this.TABLE_NAME,{filter:{id:o,userId:n}})}catch(r){throw new i.RepoServerError(t.ErrorCode.FindPublicKeyError,"Fail to find publicKey!",r)}}))}findPublicKeyByNameAndUserId(o,n){return r(this,void 0,void 0,(function*(){try{return e.commonDB.findByFilter(this.TABLE_NAME,{filter:{name:o,userId:n}})}catch(r){throw new i.RepoServerError(t.ErrorCode.FindPublicKeyError,"Fail to find publicKey!",r)}}))}};