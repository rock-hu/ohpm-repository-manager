"use strict";var e=this&&this.__createBinding||(Object.create?function(e,t,s,c){void 0===c&&(c=s);var r=Object.getOwnPropertyDescriptor(t,s);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,c,r)}:function(e,t,s,c){void 0===c&&(c=s),e[c]=t[s]}),t=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(s){if(s&&s.__esModule)return s;var c={};if(null!=s)for(var r in s)"default"!==r&&Object.prototype.hasOwnProperty.call(s,r)&&e(c,s,r);return t(c,s),c},c=this&&this.__awaiter||function(e,t,s,c){return new(s||(s=Promise))((function(r,n){function i(e){try{a(c.next(e))}catch(e){n(e)}}function o(e){try{a(c.throw(e))}catch(e){n(e)}}function a(e){var t;e.done?r(e.value):(t=e.value,t instanceof s?t:new s((function(e){e(t)}))).then(i,o)}a((c=c.apply(e,t||[])).next())}))};Object.defineProperty(exports,"__esModule",{value:!0}),exports.AccessTokenController=void 0;const r=s(require("express")),n=require("../../common"),i=require("../../packages/log"),o=require("../adminAuditLog/AdminAuditLogService"),a=require("../../common/OperateType"),u=require("./AccessTokenService"),d=require("../../common/RepoResponse"),l=require("../../common/AccessTokenType"),p=require("../package/SearchParam");class g{static getInstance(){if(!this.Instance){const e=u.AccessTokenService.getInstance();this.Instance=new g(e),this.Instance.initRouter()}return this.Instance}constructor(e){this.basePath="/api/access-token",this.router=r.Router(),this.accessTokenService=e}initRouter(){this.router.get("/list",n.SessionUtil.check,n.CsrfToken.validate,this.getAccessTokenList.bind(this)),this.router.post("/:type",n.SessionUtil.check,n.CsrfToken.validate,this.generateAccessToken.bind(this)),this.router.delete("/:id",n.SessionUtil.check,n.CsrfToken.validate,this.deleteAccessToken.bind(this))}generateAccessToken(e,t,s){return c(this,void 0,void 0,(function*(){const c=e.ctx.userId;try{const s=l.AccessTokenTypeMap[e.params.type],r=yield this.accessTokenService.generateAccessToken(c,s);d.RepoResponse.success(t,r);const n=i.OhpmLazyLogger.operateSuccess(e,"generateAccessToken");yield o.adminAuditLogService.addSuccessLog(c,a.OperateType.generateAccessToken,n)}catch(t){i.OhpmLazyLogger.operateFailure(e,"generateAccessToken"),yield o.adminAuditLogService.addFailureLog(c,a.OperateType.generateAccessToken,t.message),s(t)}}))}deleteAccessToken(e,t,s){return c(this,void 0,void 0,(function*(){const c=e.ctx.userId;try{const s=e.params.id;yield this.accessTokenService.deleteAccessToken(c,s),d.RepoResponse.success(t);const r=i.OhpmLazyLogger.operateSuccess(e,"deleteAccessToken");yield o.adminAuditLogService.addSuccessLog(c,a.OperateType.deleteAccessToken,r)}catch(t){i.OhpmLazyLogger.operateFailure(e,"generateAccessToken"),yield o.adminAuditLogService.addFailureLog(c,a.OperateType.deleteAccessToken,t.message),s(t)}}))}getAccessTokenList(e,t,s){var r;return c(this,void 0,void 0,(function*(){try{const s=e.ctx.userId,c=new p.SearchParam(e.query),n=c.getCurrentPage(),i=c.getPageSize(),o=null!==(r=yield this.accessTokenService.getAccessTokenListByUserId(s,c))&&void 0!==r?r:{total:0,recordList:[]},a=o.total,u={total:a,pageNum:n,pageSize:i,data:o.recordList,pages:Math.ceil(a/i)};d.RepoResponse.success(t,u)}catch(e){s(e)}}))}}exports.AccessTokenController=g;