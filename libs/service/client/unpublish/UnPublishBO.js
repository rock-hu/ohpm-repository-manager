"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.UnPublishBO=void 0;const e=require("../../../utils/CommonUtil"),s=require("../../../common/RepoError"),r=require("../../../common");class i{constructor(e,s){this.check(e),e=this.filterAndPaddingPkg(e),this._isWebsite=s,this._packages=e,this.initPkgMap(e),this.initRepoNames(e),this.initVersions(e)}get packages(){return this._packages}get pkgVersions(){return this._pkgVersions}get repoNames(){return this._repoNames}get pkgMap(){return this._pkgMap}get isWebsite(){return this._isWebsite}initPkgMap(e){e&&!this._pkgMap&&(this._pkgMap=new Map,e.forEach((e=>{const s=e.packageName;this._pkgMap.has(s)||this._pkgMap.set(s,{repoName:e.repoName,packageName:s});const r=this._pkgMap.get(s);e.version&&(r.versions=r.versions||[],r.versions.push(e.version))})))}initRepoNames(e){if(!e||this._repoNames)return;const s=new Set(e.map((e=>e.repoName)));this._repoNames=Array.from(s)}initVersions(e){if(!e||this._pkgVersions)return;const s=new Set(e.map((e=>e.version)));this._pkgVersions=Array.from(s)}check(e){if(!e)throw new s.RepoClientError(r.ErrorCode.InvalidUnPublishPackageParams,"unPublish packages is invalid.");if(!Array.isArray(e))throw new s.RepoClientError(r.ErrorCode.InvalidUnPublishPackageParams,"unPublish packages must be array.");if(e.length<1||e.length>i.BATCH_UN_PUBLISH_MAX_PACKAGE_NUM)throw new s.RepoClientError(r.ErrorCode.InvalidUnPublishPackageParams,`unPublish packages length must be between 1 and ${i.BATCH_UN_PUBLISH_MAX_PACKAGE_NUM}.`)}filterAndPaddingPkg(s){const r=s.filter((e=>!e.version)),i=s.filter((e=>!r.some((s=>s.packageName===e.packageName)))),t=[...r,...i],a=new Set;return t.filter((s=>{const r=e.CommonUtil.sha256(`${s.repoName}:${s.packageName}:${s.version}`);return!a.has(r)&&(a.add(r),!0)}))}}exports.UnPublishBO=i,i.BATCH_UN_PUBLISH_MAX_PACKAGE_NUM=100;