"use strict";var r=this&&this.__awaiter||function(r,e,o,t){return new(o||(o=Promise))((function(n,i){function c(r){try{d(t.next(r))}catch(r){i(r)}}function s(r){try{d(t.throw(r))}catch(r){i(r)}}function d(r){var e;r.done?n(r.value):(e=r.value,e instanceof o?e:new o((function(r){r(e)}))).then(c,s)}d((t=t.apply(r,e||[])).next())}))};Object.defineProperty(exports,"__esModule",{value:!0}),exports.AccessTokenRepository=void 0;const e=require("../../common/DbFactory"),o=require("../../common/RepoError"),t=require("../../common"),n=require("../../packages/definitions/types"),i=require("../../common/ErrorCode");class c{constructor(){this.TABLE_NAME="access_token"}static getInstance(){return this.Instance||(this.Instance=new c),this.Instance}insert(n){return r(this,void 0,void 0,(function*(){try{return e.commonDB.insertOne(this.TABLE_NAME,n,!0)}catch(r){throw new o.RepoServerError(t.ErrorCode.SaveAccessTokenError,i.MESSAGE_CN[t.ErrorCode.SaveAccessTokenError],r)}}))}deleteById(n){return r(this,void 0,void 0,(function*(){try{return e.commonDB.deleteById(this.TABLE_NAME,n,!0)}catch(r){throw new o.RepoServerError(t.ErrorCode.DeleteAccessTokenError,i.MESSAGE_CN[t.ErrorCode.DeleteAccessTokenError],r)}}))}findAll(){return r(this,void 0,void 0,(function*(){try{return e.commonDB.findByFilter(this.TABLE_NAME,{})}catch(r){throw new o.RepoServerError(t.ErrorCode.FindAccessTokenError,i.MESSAGE_CN[t.ErrorCode.FindAccessTokenError],r)}}))}findByUserIdAndType(n,c){return r(this,void 0,void 0,(function*(){try{return e.commonDB.findByFilter(this.TABLE_NAME,{filter:{userId:n,type:c}})}catch(r){throw new o.RepoServerError(t.ErrorCode.FindAccessTokenError,i.MESSAGE_CN[t.ErrorCode.FindAccessTokenError],r)}}))}findByIdAndUserId(n,c){return r(this,void 0,void 0,(function*(){try{return e.commonDB.findByFilter(this.TABLE_NAME,{filter:{id:n,userId:c}})}catch(r){throw new o.RepoServerError(t.ErrorCode.FindAccessTokenError,i.MESSAGE_CN[t.ErrorCode.FindAccessTokenError],r)}}))}findByTokenAndType(n,c){return r(this,void 0,void 0,(function*(){try{return e.commonDB.findByFilter(this.TABLE_NAME,{filter:{token:n,type:c}})}catch(r){throw new o.RepoServerError(t.ErrorCode.FindAccessTokenError,i.MESSAGE_CN[t.ErrorCode.FindAccessTokenError],r)}}))}findByUserId(c,s,d){return r(this,void 0,void 0,(function*(){try{return e.commonDB.findByFilter(this.TABLE_NAME,{filter:{userId:c},orderBy:{keyList:["createTime"],orderList:[n.OrderType.DESC]},pageQuery:{pageNum:s,pageSize:d}})}catch(r){throw new o.RepoServerError(t.ErrorCode.FindAccessTokenError,i.MESSAGE_CN[t.ErrorCode.FindAccessTokenError],r)}}))}deleteByUserId(n){return r(this,void 0,void 0,(function*(){try{return e.commonDB.deleteByKey(this.TABLE_NAME,n,"userId",!0)}catch(r){throw new o.RepoServerError(t.ErrorCode.DeleteAccessTokenError,i.MESSAGE_CN[t.ErrorCode.DeleteAccessTokenError],r)}}))}updateAccessToken(n){return r(this,void 0,void 0,(function*(){try{yield e.commonDB.updateById(this.TABLE_NAME,n.id,n,!0)}catch(r){throw new o.RepoServerError(t.ErrorCode.UpdateAccessTokenError,i.MESSAGE_CN[t.ErrorCode.UpdateAccessTokenError],r)}}))}}exports.AccessTokenRepository=c;