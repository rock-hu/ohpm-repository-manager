"use strict";var r=this&&this.__awaiter||function(r,e,o,t){return new(o||(o=Promise))((function(i,n){function a(r){try{u(t.next(r))}catch(r){n(r)}}function d(r){try{u(t.throw(r))}catch(r){n(r)}}function u(r){var e;r.done?i(r.value):(e=r.value,e instanceof o?e:new o((function(r){r(e)}))).then(a,d)}u((t=t.apply(r,e||[])).next())}))};Object.defineProperty(exports,"__esModule",{value:!0}),exports.groupMemberRepository=void 0;const e=require("../../common/DbFactory"),o=require("../../packages/definitions/types"),t=require("../../common/RepoError"),i=require("../../common"),n=require("../../packages/log");class a{insert(o){return r(this,void 0,void 0,(function*(){try{yield e.commonDB.insertOne(a.TABLE_NAME,o),n.OhpmLazyLogger.info("insert group_member success:",`groupMember's id is ${o.getId()}, operator is ${o.getUpdatedBy()}.`)}catch(r){throw new t.RepoServerError(i.ErrorCode.DatabaseOperationError,"Fail to insert group_member!",r)}}))}findByFilter(n={},d=!1,u,s){return r(this,void 0,void 0,(function*(){const r={filter:n,orderBy:{keyList:[d?"group_create_time":"create_time"],orderList:[o.OrderType.DESC]}};u&&s&&(r.pageQuery={pageNum:u,pageSize:s});try{return e.commonDB.findByFilter(a.TABLE_NAME,r)}catch(r){throw new t.RepoServerError(i.ErrorCode.DatabaseOperationError,"Fail to find group_member!",r)}}))}deleteById(o){return r(this,void 0,void 0,(function*(){try{return e.commonDB.deleteById(a.TABLE_NAME,o)}catch(r){throw new t.RepoServerError(i.ErrorCode.DatabaseOperationError,`Fail to delete group_member whose id is ${o}!`,r)}}))}deleteByGroupId(o){return r(this,void 0,void 0,(function*(){try{return e.commonDB.deleteByKey(a.TABLE_NAME,o,"group_id")}catch(r){throw new t.RepoServerError(i.ErrorCode.DatabaseOperationError,`Fail to delete group_member whose groupId is ${o}!`,r)}}))}findById(o){return r(this,void 0,void 0,(function*(){try{return e.commonDB.findById(a.TABLE_NAME,o)}catch(r){throw new t.RepoServerError(i.ErrorCode.DatabaseOperationError,`Fail to find group_member whose id is ${o}!`,r)}}))}updateById(o){return r(this,void 0,void 0,(function*(){try{return e.commonDB.updateById(a.TABLE_NAME,o.getId(),o)}catch(r){throw new t.RepoServerError(i.ErrorCode.DatabaseOperationError,"Fail to update group_member!",r)}}))}deleteByUserId(o){return r(this,void 0,void 0,(function*(){try{return e.commonDB.deleteByKey(a.TABLE_NAME,o,"member_id")}catch(r){throw new t.RepoServerError(i.ErrorCode.DatabaseOperationError,`Fail to delete group_member whose member_id is ${o}!`,r)}}))}getGroupListByFilter(n,d,u){return r(this,void 0,void 0,(function*(){const r={orderBy:{keyList:["create_time"],orderList:[o.OrderType.DESC]},pageQuery:{pageNum:n,pageSize:d},filter:Object.assign({},u)};try{return e.commonDB.findByFilter(a.TABLE_NAME,r)}catch(r){throw new t.RepoServerError(i.ErrorCode.FindAdminAuditLogListError,"fail to get userList",r)}}))}}a.TABLE_NAME="group_member",exports.groupMemberRepository=new a;