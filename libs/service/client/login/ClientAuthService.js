"use strict";var e=this&&this.__awaiter||function(e,t,i,n){return new(i||(i=Promise))((function(r,o){function c(e){try{s(n.next(e))}catch(e){o(e)}}function a(e){try{s(n.throw(e))}catch(e){o(e)}}function s(e){var t;e.done?r(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(c,a)}s((n=n.apply(e,t||[])).next())}))};Object.defineProperty(exports,"__esModule",{value:!0}),exports.clientAuthService=void 0;const t=require("./KeyManager"),i=require("../../../utils/RandomUtil"),n=require("../../../plugins/cache/CacheFactory");exports.clientAuthService=new class{constructor(){this.cache=n.CacheFactory.createCache({mode:"db"})}verifySignature(n){return e(this,void 0,void 0,(function*(){const e=n.getPublishId(),r=yield t.keyManager.getPublicKeys(e);for(const o of r)if(this.verifySign(o,n)){const n=yield t.keyManager.getUserInfo(e),r=i.RandomUtil.genAuthorizationRandomString();return yield this.cache.set(r,n,{ttl:600}),[r,n]}throw new Error("fail to verify the publicKey")}))}verifySign(e,i){const n=`${i.getVersion()}-${i.getPublishId()}-${i.getTimestamp()}-${i.getNonce()}`;return t.keyManager.verifySign(e,n,i.getSignature())}};