"use strict";var e=this&&this.__createBinding||(Object.create?function(e,r,t,i){void 0===i&&(i=t);var o=Object.getOwnPropertyDescriptor(r,t);o&&!("get"in o?!r.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return r[t]}}),Object.defineProperty(e,i,o)}:function(e,r,t,i){void 0===i&&(i=t),e[i]=r[t]}),r=this&&this.__setModuleDefault||(Object.create?function(e,r){Object.defineProperty(e,"default",{enumerable:!0,value:r})}:function(e,r){e.default=r}),t=this&&this.__importStar||function(t){if(t&&t.__esModule)return t;var i={};if(null!=t)for(var o in t)"default"!==o&&Object.prototype.hasOwnProperty.call(t,o)&&e(i,t,o);return r(i,t),i},i=this&&this.__awaiter||function(e,r,t,i){return new(t||(t=Promise))((function(o,n){function u(e){try{s(i.next(e))}catch(e){n(e)}}function c(e){try{s(i.throw(e))}catch(e){n(e)}}function s(e){var r;e.done?o(e.value):(r=e.value,r instanceof t?r:new t((function(e){e(r)}))).then(u,c)}s((i=i.apply(e,r||[])).next())}))};Object.defineProperty(exports,"__esModule",{value:!0}),exports.uplinkProxyController=void 0;const o=t(require("express")),n=require("../../../common"),u=require("./UplinkProxyService"),c=require("../../../entity/UplinkProxy"),s=require("../../user/UserService"),a=require("../../../packages/log"),p=require("../../adminAuditLog/AdminAuditLogService"),d=require("../../../common/OperateType"),l=require("../../../common/RepoResponse");exports.uplinkProxyController=new class{constructor(){this.basePath="/api/uplink-proxy",this.router=o.Router(),this.initRouter()}initRouter(){this.router.get("",n.SessionUtil.check,n.CsrfToken.validate,this.getUplinkProxy),this.router.put("/:id",n.SessionUtil.check,n.CsrfToken.validate,this.updateUplinkProxy)}getUplinkProxy(e,r,t){return i(this,void 0,void 0,(function*(){try{yield s.userService.checkUserIsAdmin(e.ctx.userId);const t=yield u.uplinkProxyService.getUplinkProxy();l.RepoResponse.success(r,t)}catch(e){t(e)}}))}updateUplinkProxy(e,r,t){return i(this,void 0,void 0,(function*(){try{yield s.userService.checkUserIsAdmin(e.ctx.userId),e.body.id=e.params.id;const t=new c.UplinkProxy(e.body);yield u.uplinkProxyService.updateUplinkProxy(t);const i=a.OhpmLazyLogger.operateSuccess(e,"updateUplinkProxy");l.RepoResponse.ok(r),yield p.adminAuditLogService.addSuccessLog(e.ctx.userId,d.OperateType.updateUplinkProxy,i)}catch(r){a.OhpmLazyLogger.operateFailure(e,"updateUplinkProxy"),yield p.adminAuditLogService.addFailureLog(e.ctx.userId,d.OperateType.updateUplinkProxy,r.message),t(r)}}))}};