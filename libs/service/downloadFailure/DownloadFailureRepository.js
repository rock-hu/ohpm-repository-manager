"use strict";var r=this&&this.__awaiter||function(r,e,o,t){return new(o||(o=Promise))((function(n,i){function a(r){try{d(t.next(r))}catch(r){i(r)}}function u(r){try{d(t.throw(r))}catch(r){i(r)}}function d(r){var e;r.done?n(r.value):(e=r.value,e instanceof o?e:new o((function(r){r(e)}))).then(a,u)}d((t=t.apply(r,e||[])).next())}))};Object.defineProperty(exports,"__esModule",{value:!0}),exports.downloadFailureRepository=void 0;const e=require("../../common/DbFactory"),o=require("../../common/RepoError"),t=require("../../common"),n=require("../../packages/definitions/types");exports.downloadFailureRepository=new class{constructor(){this.TABLE_NAME="downloadFailure"}insert(n){return r(this,void 0,void 0,(function*(){try{return e.commonDB.insertOne(this.TABLE_NAME,n,!0)}catch(r){throw new o.RepoServerError(t.ErrorCode.SaveDownloadFailureError,"Fail to insert downloadFailure!",r)}}))}update(n){return r(this,void 0,void 0,(function*(){try{return e.commonDB.upsertOne(this.TABLE_NAME,n,!0)}catch(r){throw new o.RepoServerError(t.ErrorCode.SaveDownloadFailureError,"Fail to update downloadFailure!",r)}}))}getCheckPackage(i,a,u){return r(this,void 0,void 0,(function*(){try{return e.commonDB.findByFilter(this.TABLE_NAME,{filter:u,orderBy:{keyList:["downloadTime"],orderList:[n.OrderType.DESC]},pageQuery:{pageNum:i,pageSize:a}})}catch(r){throw new o.RepoServerError(t.ErrorCode.FindDownloadFailureListError,"Fail to get downloadFailureList!",r)}}))}};