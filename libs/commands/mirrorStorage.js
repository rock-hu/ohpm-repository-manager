"use strict";var e=this&&this.__awaiter||function(e,t,r,o){return new(r||(r=Promise))((function(i,n){function s(e){try{c(o.next(e))}catch(e){n(e)}}function a(e){try{c(o.throw(e))}catch(e){n(e)}}function c(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(s,a)}c((o=o.apply(e,t||[])).next())}))},t=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.mirrorStorageExecute=exports.mirrorStorageCmd=void 0;const r=require("./checkStorage"),o=require("../packages/log"),i=require("../plugins/storage/SftpOperate"),n=require("../utils/FsUtil"),s=require("../common/init"),a=require("../service/downloadFailure/DownloadFailureRepository"),c=require("../packages/definitions/types"),d=require("../common/Constants"),u=t(require("path")),l=require("../utils/RandomUtil"),p=require("../common/DbAndStoreType"),f=t(require("log4js"));function g(e,t){t.includes(e)||((0,o.consoleError)(`SFTP ${e} does not exist.`),f.default.shutdown((()=>process.exit(1))))}function y(t,i,n,a){return e(this,void 0,void 0,(function*(){const{failed:e}=a;if((yield(0,r.loadConfig)()).store.type!==p.StorageType.Sftp)throw new Error(`command "mirror_storage" only supports "${p.StorageType.Sftp}".`);const c=(0,r.buildFilter)(n,e);yield s.MainInit.particalInit();const y=u.default.join(d.Constants.DATA_DIR,"./temp",l.RandomUtil.generateSecureRandomString(8)),h=yield(0,r.getAllPackages)(e,c),S=yield(0,r.getSftpList)();g(t,S),g(i,S);let v=0;for(const[r,n]of h){const s=n[0];if(s)try{v=yield m(s,t,i,v,e,n,r,y)}catch(e){e instanceof Error&&o.OhpmLazyLogger.error(e.message)}}const{size:w}=h,k=w-v;w?(0,o.consoleInfo)(`mirror ${w} package(s), ${v} succeed, ${k} failed.`):(0,o.consoleInfo)(`in ${t}, no results match your search criteria.`),f.default.shutdown((()=>process.exit(0)))}))}function m(t,s,d,l,p,f,g,y){return e(this,void 0,void 0,(function*(){o.OhpmLazyLogger.info(`start mirroring ${(0,r.packageDisplay)(t)}.`);const m=(0,r.makePackagePath)(t);if(!(yield i.SftpOperate.exists(s,m)))throw new Error(`package ${g} does not exist in SFTP ${s}`);const{checksum:h}=t,S=yield(0,r.hasPackageBeenAltered)(s,m,h,y);let v;const w=yield i.SftpOperate.exists(d,m);if(w&&(v=yield(0,r.hasPackageBeenAltered)(d,m,h,y)),S)throw new Error(`package ${g} in SFTP ${s} is not complete`);return w&&!v||(yield function(t,r,o,s){return e(this,void 0,void 0,(function*(){yield i.SftpOperate.get(r,t,s),yield i.SftpOperate.mkdir(o,u.default.dirname(t),!0),yield i.SftpOperate.put(o,s,t),yield n.FsUtil.rm(s)}))}(m,s,d,y)),l++,(0,o.consoleInfo)(`mirroring package ${(0,r.packageDisplay)(t)} succeed.`),p&&(yield function(t,r){return e(this,void 0,void 0,(function*(){for(const e of t)if(e.downloadHost===r){const t=Object.assign(Object.assign({},e),{handled:c.HandledType.Processed});yield a.downloadFailureRepository.update(t)}}))}(f,d)),l}))}exports.mirrorStorageCmd=function(t,r,i,n){return e(this,void 0,void 0,(function*(){try{yield y(t,r,i,n)}catch(e){(0,o.consoleError)(`server fail to mirror storage: ${e}.`),f.default.shutdown((()=>process.exit(1)))}}))},exports.mirrorStorageExecute=y;