"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.AuditLogDataSearchFilter=void 0;const e=require("../../common/OperateType"),t=require("../../packages/log"),r=require("../../common/RepoError"),i=require("../../common"),a=require("../../packages/definitions/types"),s=require("../../common/DataSearchFilter"),p=require("../../utils/CommonConstants");class n extends s.DataSearchFilter{constructor(e){super(e),this.eventType=e.eventType,this.userName=e.userName,this.role=e.role,this.isOperationSuccess=e.isOperationSuccess,this.startTime=e.startTime,this.endTime=e.endTime}getEventType(){return this.eventType}getOperationResult(t){return t===p.SUCCESS_OPERATION?e.OperateResult.success:t===p.FAIL_OPERATION?e.OperateResult.failure:void 0}getRole(){return this.role===p.USER_ROLE?a.RoleEnumRequest.User:this.role===p.ADMIN_ROLE?a.RoleEnumRequest.Admin:void 0}getFilterAuditLog(){return this.initUserNameFilter(),this.initUserRoleFilter(),this.initOperationResultFilter(),this.initOperationEventTypeFilter(),this.initTimeFilter(),t.OhpmLazyLogger.debug("get auditLog filter success."),this.filterList}initTimeFilter(){const e={startNumber:this.startTime,endNumber:this.endTime,tableStampName:"operationTime"};super.initTimeFilter(e)}initOperationResultFilter(){const e={types:[this.getOperationResult(p.SUCCESS_OPERATION),this.getOperationResult(p.FAIL_OPERATION)],type:this.getOperationResult(this.isOperationSuccess),tableStampName:"operationDescription"};super.initTypeFilter(e)}initUserRoleFilter(){const e={types:[a.RoleType.Admin,a.RoleType.Member],type:this.getRole(),tableStampName:"role"};super.initTypeFilter(e)}initUserNameFilter(){const e={tableStampName:"adminName",stringName:this.userName,filterName:"userName"};super.initStringFilter(e)}initOperationEventTypeFilter(){if(this.getEventType()){const e=this.collectValuesByAuditLog(o,this.getEventType());if(0===e.length)throw new r.RepoClientError(i.ErrorCode.GetOperationLogEventTypeError,"fail to get auditLog event type.");this.filterList=this.addProperties(this.filterList,{operationType:{in:e}})}}collectValuesByAuditLog(e,t){if(Array.isArray(e))return e;let r=[];if(e.hasOwnProperty(t))return this.collectAllValues(e[t]);for(const i in e)if(e.hasOwnProperty(i)){const a=e[i];"object"!=typeof a||Array.isArray(a)||(r=r.concat(this.collectValuesByAuditLog(a,t)))}return r.filter(((e,t,r)=>r.indexOf(e)===t))}collectAllValues(e){if(Array.isArray(e))return e;{let t=[];for(const r in e)e.hasOwnProperty(r)&&(t=t.concat(this.collectAllValues(e[r])));return t}}}exports.AuditLogDataSearchFilter=n;const o={certificationManagement:{certify:{addPublicKey:[e.OperateType.addPublicKey],delPublicKey:[e.OperateType.delPublicKey]},accessToken:{generateAccessToken:[e.OperateType.generateAccessToken],deleteAccessToken:[e.OperateType.deleteAccessToken]}},systemManagement:{resetKey:[e.OperateType.resetKey],checksRule:[e.OperateType.checksRule]},groupManagement:{group:{addGroup:[e.OperateType.addGroup],updateGroup:[e.OperateType.updateGroup],deleteGroup:[e.OperateType.deleteGroup]},groupMember:{addMember:[e.OperateType.addMember],deleteMember:[e.OperateType.deleteMember]},groupAdmin:{addAdmin:[e.OperateType.addAdmin],deleteAdmin:[e.OperateType.deleteAdmin]}},repoManagement:{repo:{publish:[e.OperateType.publish],unPublish:[e.OperateType.unPublish],batchUnPublish:[e.OperateType.batchUnPublish],updateRepo:[e.OperateType.updateRepo]},uplink:{addUplink:[e.OperateType.addUplink],updateUplink:[e.OperateType.updateUplink],deleteUplink:[e.OperateType.deleteUplink],updateUplinkProxy:[e.OperateType.updateUplinkProxy]},tag:{addTag:[e.OperateType.addTag],deleteTag:[e.OperateType.deleteTag],updateTag:[e.OperateType.updateTag]}},userManagement:{delUser:[e.OperateType.delUser],addUser:[e.OperateType.addUser],changeRole:[e.OperateType.changeRole],resetPassWord:[e.OperateType.resetPassWord]}};