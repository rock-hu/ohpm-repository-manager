"use strict";var e=this&&this.__awaiter||function(e,t,i,r){return new(i||(i=Promise))((function(a,s){function o(e){try{l(r.next(e))}catch(e){s(e)}}function n(e){try{l(r.throw(e))}catch(e){s(e)}}function l(e){var t;e.done?a(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(o,n)}l((r=r.apply(e,t||[])).next())}))},t=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.publishStreamService=void 0;const i=require("./PublishService"),r=require("../../../common/Constants"),a=require("../../../utils/FsUtil"),s=require("../../../utils/CompressUtil"),o=t(require("path")),n=t(require("fs")),l=require("../../../common/FSFactory"),c=require("../../../common/RepoError"),h=require("../../../common"),p=t(require("tar")),d=require("../../../utils/RandomUtil"),m=require("../../../utils/CommonUtil"),u=require("../../../tools/db-lock"),y=require("../utils/validateCompability");class g extends i.PublishService{publish(t,i,a,s){return e(this,void 0,void 0,(function*(){yield this.checkBeforePublish(t,i,a);const e=JSON.parse(s.metadata),o=new u.DbLock(`${t}:${i}:${this.getVersion(e)}`),n=new u.DbLock(`${t}:${i}`);try{yield o.lock();const l=e.packageType===r.Constants.HSPPackageType&&e.hspType===r.HSP_TYPE.BUNDLE_APP?yield this.publishTgzByStream(t,i,a,s):yield this.publishHarByStream(t,i,a,s);try{yield n.lock();const[r,s]=yield this.uploadHarMetaData(l.harParam.fileStorage,l.packageCategory,l.harParam.publishJson,l.harParam.randomTempDir),o=this.genMetaDataPo(l.packageCategory,r);yield this.actionAfterPublish(Object.assign(Object.assign({},l),{metadataPo:o,oldMetaData:s}),t,i,a,e)}finally{yield n.unLock()}}finally{yield o.unLock()}}))}publishHarByStream(t,i,r,a){return e(this,void 0,void 0,(function*(){const e=JSON.parse(a.metadata),s=yield this.genHarTempDir(e),l=n.default.createReadStream(a.pkg_stream.path);try{yield this.verifyPackageType(Object.assign({repoName:t,packageName:i,publishJson:e},s)),this.dealWithBundleAppTag(e);const n=yield this.uploadHarByStream(Object.assign({repoName:t,packageName:i,user:r,publishJson:e,pkgInfo:{size:a.pkg_stream.size,stream:l}},s));return Object.assign({},n)}finally{l.close(),yield m.CommonUtil.fsrm(o.default.resolve(s.randomTempDir))}}))}uploadHarByStream(t){return e(this,void 0,void 0,(function*(){const[e,i]=yield this.checkAndParseBody(Object.assign(Object.assign({},t),{byStream:!0,fileSize:t.pkgInfo.size}));if(!t.harTempDir){const e=yield this.genHarTempDir(t.publishJson);t=Object.assign(Object.assign({},t),e)}try{yield this.writeFileByPipStream(t.harTempDir,t.pkgInfo.stream)}catch(e){throw new c.RepoClientError(h.ErrorCode.PipeStreamError,`Error while writing to file, error: ${(null==e?void 0:e.message)||JSON.stringify(e)}`)}yield p.default.extract({file:t.harTempDir,cwd:t.randomTempDir,strip:1},["package/oh-package.json5"]);const r=o.default.join(t.randomTempDir,"oh-package.json5");yield(0,y.validateCompability)(t.harTempDir,yield a.FsUtil.readJSON5(r));const s=yield this.verifyAndUploadHar(t.harTempDir,t.publishJson,e,t.fileStorage);return{harParam:t,pkgManifest:s,packageCategory:e,dependencyPOArr:i}}))}writeFileByPipStream(t,i){return e(this,void 0,void 0,(function*(){return new Promise(((e,r)=>{const s=a.FsUtil.createWriteStream(t);i.pipe(s),s.on("finish",e),s.on("error",(e=>{i.destroy(),s.destroy(),r(e.message)}))}))}))}publishTgzByStream(t,i,r,a){return e(this,void 0,void 0,(function*(){const e=JSON.parse(a.metadata),[s,o,n]=yield this.getTgzTempDir(e),{harInfo:c,hspInfo:h,cacheDir:p}=yield this.getPkgInfoInTgzFile(a.pkg_stream);try{const a=yield l.FsFactory.getInstance();yield this.verifyPackageType({repoName:t,packageName:i,publishJson:e,randomTempDir:s,fileStorage:a});const d={repoName:t,packageName:i,user:r,publishJson:e,fileStorage:a,randomTempDir:s},u=[],y=this.uploadHarByStream(Object.assign(Object.assign({},d),{pkgInfo:{size:c.harSize,stream:c.harStream},harTempDir:o})),g=this.getPkgCategoryOnHsp({publishJson:e,repoName:t,packageName:i,byStream:!0,fileSize:h.hspSize}),f=this.verifyAndUploadHspByStream(n,e,g,a,h.hspStream),S=yield y,b=yield f;return u.push(S),u.push(b),yield this.mergeResult(u)}finally{c.harStream.close(),yield m.CommonUtil.fsrm(s),yield m.CommonUtil.fsrm(p)}}))}getPkgInfoInTgzFile(t){return e(this,void 0,void 0,(function*(){let e=o.default.join(r.Constants.DATA_DIR,"./temp/uploads/harball",d.RandomUtil.generateSecureRandomString(4));for(;yield a.FsUtil.exists(e);)e=o.default.join(r.Constants.DATA_DIR,"./temp/uploads/harball",d.RandomUtil.generateSecureRandomString(4));yield a.FsUtil.createDirIfNotExists(e),yield a.FsUtil.chmod(e,488);const i=yield m.CommonUtil.hspDetect(t.path);m.CommonUtil.validHspDetectResult(i);const{interfaceHar:s,hsp:l}=i;p.default.extract({file:t.path,cwd:e,strip:0,sync:!0},[s,l]);const c=o.default.join(e,s),h=o.default.join(e,l),u=a.FsUtil.statSync(c).size,y=a.FsUtil.statSync(h).size;return{harInfo:{harSize:u,harPath:c,harStream:n.default.createReadStream(c)},hspInfo:{hspSize:y,hspPath:h,hspStream:n.default.createReadStream(h)},cacheDir:e}}))}verifyAndUploadHspByStream(t,i,r,a,o){return e(this,void 0,void 0,(function*(){try{yield this.writeFileByPipStream(t,o)}catch(e){throw new c.RepoClientError(h.ErrorCode.PipeStreamError,`Error while writing to file, error: ${(null==e?void 0:e.message)||JSON.stringify(e)}`)}const e=yield s.CompressUtil.getFileStat(t);if(r.fileSize!==e.size)throw new c.RepoClientError(h.ErrorCode.InconsistentFileSize,"The actual size of the hsp file does not match the request.");const n=yield this.calculatedChecksum(t);if(r.checksum!==n)throw new c.RepoClientError(h.ErrorCode.InconsistentChecksum,"The checksum of the har hsp does not match the request.");this.genHspTarBall(i,r);const l={repoName:r.repoName,packageName:r.name,version:r.version,isPackage:!1};return r.hspFileId=yield a.save(t,Object.assign(Object.assign({},l),{isPackage:!0})),{publishJson:i,packageCategory:r}}))}}exports.publishStreamService=new g;