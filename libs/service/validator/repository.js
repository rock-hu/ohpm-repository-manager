"use strict";var o=this&&this.__awaiter||function(o,i,t,e){return new(t||(t=Promise))((function(n,r){function s(o){try{c(e.next(o))}catch(o){r(o)}}function a(o){try{c(e.throw(o))}catch(o){r(o)}}function c(o){var i;o.done?n(o.value):(i=o.value,i instanceof t?i:new t((function(o){o(i)}))).then(s,a)}c((e=e.apply(o,i||[])).next())}))};Object.defineProperty(exports,"__esModule",{value:!0}),exports.DefaultConfigFileRepository=exports.ValidationConfigDBRepository=void 0;const i=require("../../entity/ValidationConfigEntity"),t=require("../../common/DbFactory"),e=require("../../utils/PageUtil"),n=require("../../common/RepoError"),r=require("../../common"),s=require("../../packages/log");class a{static getInstance(){return this.Instance||(this.Instance=new a),this.Instance}constructor(){this.TABLE_NAME="validation_config"}findAllConfigs(){return o(this,void 0,void 0,(function*(){try{const o=yield t.commonDB.findByFilter(this.TABLE_NAME,{pageQuery:{pageNum:1,pageSize:e.MAX_PAGE_SIZE}}),n=[];return o.recordList.forEach((o=>{n.push(new i.ValidationConfigEntity(o))})),n}catch(o){throw new n.RepoServerError(r.ErrorCode.FindValidationConfigError,"Fail to get ValidationConfig list!",o)}}))}saveConfigs(i){return o(this,void 0,void 0,(function*(){try{for(const o of i){const i=yield t.commonDB.findById(this.TABLE_NAME,o.id);i?(o.createTime=i.createTime,yield t.commonDB.updateById(this.TABLE_NAME,o.id,o)):yield t.commonDB.insertOne(this.TABLE_NAME,o)}}catch(o){throw new n.RepoServerError(r.ErrorCode.SaveValidationConfigError,"Fail to insert ValidationConfigEntity!",o)}}))}}exports.ValidationConfigDBRepository=a;exports.DefaultConfigFileRepository=class{constructor(o){this.configs=o}findAllConfigs(){const o=[],t=this.configs;for(const e of t)o.push(new i.ValidationConfigEntity(e));return o}saveConfigs(i){return o(this,void 0,void 0,(function*(){throw s.OhpmLazyLogger.error("method saveConfigs is not implemented in DefaultConfigFileRepository."),new n.RepoClientError(r.ErrorCode.UnexpectedError,"Unknown Error")}))}};