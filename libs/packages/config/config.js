"use strict";var e=this&&this.__createBinding||(Object.create?function(e,t,o,r){void 0===r&&(r=o);var n=Object.getOwnPropertyDescriptor(t,o);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[o]}}),Object.defineProperty(e,r,n)}:function(e,t,o,r){void 0===r&&(r=o),e[r]=t[o]}),t=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(o){if(o&&o.__esModule)return o;var r={};if(null!=o)for(var n in o)"default"!==n&&Object.prototype.hasOwnProperty.call(o,n)&&e(r,o,n);return t(r,o),r},r=this&&this.__awaiter||function(e,t,o,r){return new(o||(o=Promise))((function(n,i){function s(e){try{l(r.next(e))}catch(e){i(e)}}function a(e){try{l(r.throw(e))}catch(e){i(e)}}function l(e){var t;e.done?n(e.value):(t=e.value,t instanceof o?t:new o((function(e){e(t)}))).then(s,a)}l((r=r.apply(e,t||[])).next())}))},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.updateLogPathFromZipFile=exports.updateLogPathFromEnv=exports.getEnvironmentVariable=exports.readCryptoVersion=exports.setEnvironmentVariable=exports.parseConfigFile=exports.parseAndUpdateGlobalConfig=exports.updateConfig=exports.config=void 0;const i=require("../log"),s=o(require("child_process")),a=n(require("os")),l=o(require("js-yaml")),u=require("../../utils/FsUtil"),c=n(require("path")),d=require("../../common/Constants"),f=require("./constants"),p=n(require("log4js")),h=require("../../commands/install"),m=require("./checker"),g=require("../../commands/restore");function v(e){exports.config=e}function y(e){return r(this,void 0,void 0,(function*(){const t=yield u.FsUtil.readFile(e,"utf8");exports.config=l.load(t)}))}function x(e){return process.env[e]}exports.updateConfig=v,exports.parseAndUpdateGlobalConfig=y,exports.parseConfigFile=function(e){return r(this,void 0,void 0,(function*(){const t=yield u.FsUtil.readFile(e,"utf8");return l.load(t)}))},exports.setEnvironmentVariable=function(e,t){return r(this,void 0,void 0,(function*(){const o=a.default.platform();let n;if(process.env[e]===t&&(i.OhpmLazyLogger.info(`"${f.ConfigItemNames.DEPLOY_ROOT}" environment variables: "${e} = ${t}".`),p.default.shutdown((()=>process.exit(0)))),"win32"===o)i.OhpmLazyLogger.debug(`current system is "${o}".`);else{n=function(){try{return(0,s.execSync)("echo $SHELL").toString().trim()}catch(e){throw new Error('fail to run the "echo $SHELL" statement, please configure the shell environment variable and run the install command again.')}}().includes("zsh")?".zshrc":".bashrc",yield function(e){return r(this,void 0,void 0,(function*(){const t=`${a.default.homedir()}/${e}`;if(!(yield u.FsUtil.exists(t)))throw new Error(`file "${t}" is used to store the "deploy_root" path, file "${t}" does not exist, please create it`)}))}(n),i.OhpmLazyLogger.debug(`current system is "${o}" and configPath is "${n}".`)}const l=function(e,t,o,r){let n;n="win32"===e?`setx ${o} ${r}`:"linux"===e?`sed -i '/export ${o}/d' ~/${t} && echo "export ${o}=${r}" >> ~/${t}`:`sed -i'.bak' -e '/export ${o}/d' ~/${t} && echo "export ${o}=${r}" >> ~/${t}`;return n}(o,n,e,t),c=function(e,t){let o;o="win32"===e?`to make the environment variables of "${f.ConfigItemNames.DEPLOY_ROOT}" take effect, please restart a new terminal.`:`to make the environment variables of "${f.ConfigItemNames.DEPLOY_ROOT}" take effect, please run the refresh command: "source ~/${t} " or ". ~/${t}".`;return o}(o,n);yield s.default.exec(l,(o=>{if(o)throw new Error(`fail to set "deploy root environment variables": ${o}`);i.OhpmLazyLogger.info(`set "${f.ConfigItemNames.DEPLOY_ROOT}" environment variables successfully: "${e} = ${t}".`),(0,i.printLogBoldYellow)(c),p.default.shutdown((()=>process.exit(0)))}))}))},exports.readCryptoVersion=function(e){return r(this,void 0,void 0,(function*(){const t=c.default.join(d.Constants.DATA_DIR,e);return(yield u.FsUtil.exists(t))?(yield u.FsUtil.readFile(t)).toString():""}))},exports.getEnvironmentVariable=x,exports.updateLogPathFromEnv=function(){return r(this,void 0,void 0,(function*(){const e=yield(0,h.readCongFileFromEnv)();if(!(yield u.FsUtil.exists(e)))throw new Error('please run "ohpm-repo install" before start');(0,d.updateDeployRoot)(x(d.Constants.DEPLOY_ROOT_ENV)),yield y(e),yield(0,m.checkLogs)(exports.config.logs_path)}))},exports.updateLogPathFromZipFile=function(e,t){return r(this,void 0,void 0,(function*(){const o=c.default.resolve(e,f.PathConstants.TEMP_DEPLOY_ROOT);yield u.FsUtil.createDirIfNotExists(c.default.resolve(o)),yield(0,g.extractOperation)(t,o,null);const r=yield(0,g.getConfig)(o);(0,d.updateDeployRoot)(e),yield(0,m.checkLogs)(r.logs_path),(0,m.checkLoglevel)(r),v(r),yield u.FsUtil.deleteFolderRecursive(o)}))};