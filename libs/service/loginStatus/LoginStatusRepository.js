"use strict";var t=this&&this.__awaiter||function(t,r,e,o){return new(e||(e=Promise))((function(n,i){function s(t){try{u(o.next(t))}catch(t){i(t)}}function a(t){try{u(o.throw(t))}catch(t){i(t)}}function u(t){var r;t.done?n(t.value):(r=t.value,r instanceof e?r:new e((function(t){t(r)}))).then(s,a)}u((o=o.apply(t,r||[])).next())}))};Object.defineProperty(exports,"__esModule",{value:!0}),exports.LoginStatusRepository=void 0;const r=require("../../common/DbFactory"),e=require("../../common/RepoError"),o=require("../../common"),n=require("../../packages/definitions/types");class i{constructor(){this.TABLE_NAME="loginStatus"}static getInstance(){return this.Instance||(this.Instance=new i),this.Instance}insert(n){return t(this,void 0,void 0,(function*(){try{return r.commonDB.insertOne(this.TABLE_NAME,n,!0)}catch(t){throw new e.RepoServerError(o.ErrorCode.SaveLoginStatusError,"Fail to insert LoginStatus!",t)}}))}updateState(n,i,s){return t(this,void 0,void 0,(function*(){try{const t=(new Date).getTime();return r.commonDB.updateById(this.TABLE_NAME,n,{id:n,sessionId:i,loginTime:t,needChangePassword:s},!0)}catch(t){throw new e.RepoServerError(o.ErrorCode.UpdateLoginStatusError,"Fail to update LoginStatus!",t)}}))}findLoginStatusByID(n){return t(this,void 0,void 0,(function*(){try{return r.commonDB.findById(this.TABLE_NAME,n)}catch(t){throw new e.RepoServerError(o.ErrorCode.FindLoginStatusError,"Fail to find LoginStatus!",t)}}))}findLoginStatusBySessionId(n){return t(this,void 0,void 0,(function*(){try{return r.commonDB.findByFilter(this.TABLE_NAME,{filter:{sessionId:n}})}catch(t){throw new e.RepoServerError(o.ErrorCode.FindLoginStatusError,"Fail to find LoginStatus!",t)}}))}deleteLoginStatusBySessionId(n){return t(this,void 0,void 0,(function*(){try{return r.commonDB.deleteByKey(this.TABLE_NAME,n,"sessionId",!0)}catch(t){throw new e.RepoServerError(o.ErrorCode.FindLoginStatusError,"Fail to delete LoginStatus!",t)}}))}deleteLoginStatusById(n){return t(this,void 0,void 0,(function*(){try{return r.commonDB.deleteById(this.TABLE_NAME,n,!0)}catch(t){throw new e.RepoServerError(o.ErrorCode.FindLoginStatusError,"Fail to delete LoginStatus!",t)}}))}findByFilter(i,s){return t(this,void 0,void 0,(function*(){try{return r.commonDB.findByFilter(this.TABLE_NAME,{orderBy:{keyList:["loginTime"],orderList:[n.OrderType.DESC]},pageQuery:{pageNum:i,pageSize:s}})}catch(t){throw new e.RepoServerError(o.ErrorCode.FindLoginStatusListError,"Fail to get loginStatusList!",t)}}))}}exports.LoginStatusRepository=i;