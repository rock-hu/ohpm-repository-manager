"use strict";var e=this&&this.__awaiter||function(e,i,t,n){return new(t||(t=Promise))((function(o,r){function a(e){try{c(n.next(e))}catch(e){r(e)}}function s(e){try{c(n.throw(e))}catch(e){r(e)}}function c(e){var i;e.done?o(e.value):(i=e.value,i instanceof t?i:new t((function(e){e(i)}))).then(a,s)}c((n=n.apply(e,i||[])).next())}))};Object.defineProperty(exports,"__esModule",{value:!0}),exports.publishRepository=void 0;const i=require("../../../entity/PackageMetaData"),t=require("../../../common/DbFactory"),n=require("../../../entity/PackageManifest"),o=require("../../../entity/Dependency"),r=require("./PublishService"),a=require("../../../utils/CommonUtil");exports.publishRepository=new class{hasSimilarityNameExists(i,o){return e(this,void 0,void 0,(function*(){const e=(0,r.getVerifyName)(o),{total:a,recordList:s}=yield t.commonDB.findByFilter(n.OHPM_PACKAGE_MANIFEST_DB_NAME,{filter:{repoName:i,verifyName:e}});return a>0&&s.some((e=>e.name!==o))}))}hasSamePackageExists(i,o,r){return e(this,void 0,void 0,(function*(){const{total:e,recordList:a}=yield t.commonDB.findByFilter(n.OHPM_PACKAGE_MANIFEST_DB_NAME,{filter:{repoName:i,name:o}});return e>0&&a.some((e=>!e.groupName&&e.authorId!==r.getId()))}))}findSameVersionAndNamePackage(i,o,r){return e(this,void 0,void 0,(function*(){return yield t.commonDB.findByFilter(n.OHPM_PACKAGE_MANIFEST_DB_NAME,{filter:{repoName:i,name:o,version:r}})}))}selectPackageMetaDataByName(n,o){return e(this,void 0,void 0,(function*(){return t.commonDB.findById(i.OHPM_PACKAGE_METADATA_DB_NAME,a.CommonUtil.sha256(`${n}:${o}`))}))}selectPackageManifestDataByName(i,o,r){return e(this,void 0,void 0,(function*(){return t.commonDB.findById(n.OHPM_PACKAGE_MANIFEST_DB_NAME,a.CommonUtil.sha256(`${i}:${o}:${r}`))}))}isPackagesPublishedByOnePublisher(i,o,r){return e(this,void 0,void 0,(function*(){return(yield t.commonDB.findByFilter(n.OHPM_PACKAGE_MANIFEST_DB_NAME,{filter:{name:o,repoName:i,unPublishTime:0}})).recordList.every((e=>e.authorId===r))}))}saveOrUpdatePackage(n){return e(this,void 0,void 0,(function*(){(yield t.commonDB.findById(i.OHPM_PACKAGE_METADATA_DB_NAME,n.id))?yield t.commonDB.updateById(i.OHPM_PACKAGE_METADATA_DB_NAME,n.id,n):yield t.commonDB.insertOne(i.OHPM_PACKAGE_METADATA_DB_NAME,n)}))}savePackageManifest(i){return e(this,void 0,void 0,(function*(){yield t.commonDB.insertOne(n.OHPM_PACKAGE_MANIFEST_DB_NAME,i)}))}saveBatchDependencies(i){return e(this,void 0,void 0,(function*(){for(const e of i)yield t.commonDB.insertOne(o.OHPM_DEPENDENCY_DB_NAME,e)}))}};