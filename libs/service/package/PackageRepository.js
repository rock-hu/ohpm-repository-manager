"use strict";var e=this&&this.__awaiter||function(e,r,t,o){return new(t||(t=Promise))((function(i,a){function n(e){try{c(o.next(e))}catch(e){a(e)}}function s(e){try{c(o.throw(e))}catch(e){a(e)}}function c(e){var r;e.done?i(e.value):(r=e.value,r instanceof t?r:new t((function(e){e(r)}))).then(n,s)}c((o=o.apply(e,r||[])).next())}))};Object.defineProperty(exports,"__esModule",{value:!0}),exports.packageRepository=void 0;const r=require("../../packages/definitions/types"),t=require("../../common/DbFactory"),o=require("../../entity/PackageManifest"),i=require("../../entity/Dependency"),a=require("../../entity/PackageMetaData"),n=require("../../common/RepoError"),s=require("../../common"),c=require("../../utils/CommonConstants"),d=require("../../utils/PageUtil");exports.packageRepository=new class{getPackageList(o,i){return e(this,void 0,void 0,(function*(){const e={orderBy:{keyList:["latestPublishTime"],orderList:[r.OrderType.DESC]},pageQuery:{pageNum:o,pageSize:i}};try{return t.commonDB.findByFilter(a.OHPM_PACKAGE_METADATA_DB_NAME,e)}catch(e){throw new n.RepoServerError(s.ErrorCode.DatabaseOperationError,"Fail to get packages!",e)}}))}getPackageListByName(o,i,c){return e(this,void 0,void 0,(function*(){const e={filter:{name:{containsIgnoreCase:o}},orderBy:{keyList:["latestPublishTime"],orderList:[r.OrderType.DESC]},pageQuery:{pageNum:i,pageSize:c}};try{return t.commonDB.findByFilter(a.OHPM_PACKAGE_METADATA_DB_NAME,e)}catch(e){throw new n.RepoServerError(s.ErrorCode.DatabaseOperationError,"Fail to get packages!",e)}}))}getVersionListByName(r,i){return e(this,void 0,void 0,(function*(){const e={filter:{repoName:r,name:i,status:c.PackageStatus.Published},pick:["id","version","publishTime"]};try{return t.commonDB.findByFilter(o.OHPM_PACKAGE_MANIFEST_DB_NAME,e)}catch(e){throw new n.RepoServerError(s.ErrorCode.DatabaseOperationError,"Fail to get versionList!",e)}}))}getManifestByName(r,i,a){return e(this,void 0,void 0,(function*(){try{const e={filter:{repoName:r,name:i,version:a,status:c.PackageStatus.Published}};return t.commonDB.findByFilter(o.OHPM_PACKAGE_MANIFEST_DB_NAME,e)}catch(e){throw new n.RepoServerError(s.ErrorCode.DatabaseOperationError,"Fail to get downloads!",e)}}))}getMetadataByName(r,o){return e(this,void 0,void 0,(function*(){try{const e={filter:{repoName:r,name:o}};return t.commonDB.findByFilter(a.OHPM_PACKAGE_METADATA_DB_NAME,e)}catch(e){throw new n.RepoServerError(s.ErrorCode.DatabaseOperationError,"Fail to get metadata!",e)}}))}getManifestById(r){return e(this,void 0,void 0,(function*(){try{const e={filter:{id:r,status:c.PackageStatus.Published}},i=yield t.commonDB.findByFilter(o.OHPM_PACKAGE_MANIFEST_DB_NAME,e);if(i.total>0)return i.recordList[0]}catch(e){throw new n.RepoServerError(s.ErrorCode.DatabaseOperationError,"Fail to get detail!",e)}}))}getManifestByIds(r){return e(this,void 0,void 0,(function*(){try{const e={filter:{id:{in:r},status:c.PackageStatus.Published}};return yield t.commonDB.findByFilter(o.OHPM_PACKAGE_MANIFEST_DB_NAME,e)}catch(e){throw new n.RepoServerError(s.ErrorCode.DatabaseOperationError,"Fail to get detail!",e)}}))}getDependenciesByName(r,o,a,c){return e(this,void 0,void 0,(function*(){const e={filter:{repoName:r.repoName,name:r.name,version:r.version,depType:c},pick:["id","name","depPackageName"],pageQuery:{pageNum:o,pageSize:a}};try{return t.commonDB.findByFilter(i.OHPM_DEPENDENCY_DB_NAME,e)}catch(e){throw new n.RepoServerError(s.ErrorCode.DatabaseOperationError,"Fail to get detail!",e)}}))}findByFilter(i,a=1,c=d.MAX_PAGE_SIZE){return e(this,void 0,void 0,(function*(){const e={filter:i,pageQuery:{pageNum:a,pageSize:c},orderBy:{keyList:["publishTime"],orderList:[r.OrderType.DESC]}};try{return t.commonDB.findByFilter(o.OHPM_PACKAGE_MANIFEST_DB_NAME,e)}catch(e){throw new n.RepoServerError(s.ErrorCode.DatabaseOperationError,"GET PACKAGE ERROR!",e)}}))}updateStatus(r){return e(this,void 0,void 0,(function*(){try{yield t.commonDB.updateById(o.OHPM_PACKAGE_MANIFEST_DB_NAME,r.id,r,!0)}catch(e){throw new n.RepoServerError(s.ErrorCode.UpdateRepoError,"UPDATE REPO ERROR!",e)}}))}getPackageListByFilter(i,a,c){return e(this,void 0,void 0,(function*(){const e={orderBy:{keyList:["publishTime"],orderList:[r.OrderType.DESC]},pick:["id","name","authorName","publisherName","version","description","license","keywords","status","publishTime"],pageQuery:{pageNum:i,pageSize:a},filter:Object.assign({},c)};try{return t.commonDB.findByFilter(o.OHPM_PACKAGE_MANIFEST_DB_NAME,e)}catch(e){throw new n.RepoServerError(s.ErrorCode.FindAdminAuditLogListError,"fail to get userList",e)}}))}getNameByDepPackageName(r){return e(this,void 0,void 0,(function*(){const e={filter:{depPackageName:r},pick:["name"]};try{return(yield t.commonDB.findByFilter(i.OHPM_DEPENDENCY_DB_NAME,e)).recordList}catch(e){throw new n.RepoServerError(s.ErrorCode.DatabaseOperationError,"Fail to get depended list!",e)}}))}};