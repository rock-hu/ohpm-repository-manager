"use strict";var i=this&&this.__awaiter||function(i,e,t,r){return new(t||(t=Promise))((function(n,o){function a(i){try{s(r.next(i))}catch(i){o(i)}}function c(i){try{s(r.throw(i))}catch(i){o(i)}}function s(i){var e;i.done?n(i.value):(e=i.value,e instanceof t?e:new t((function(i){i(e)}))).then(a,c)}s((r=r.apply(i,e||[])).next())}))};Object.defineProperty(exports,"__esModule",{value:!0}),exports.MainInit=void 0;const e=require("../packages/config/config"),t=require("../packages/log"),r=require("./DbFactory"),n=require("./FSFactory"),o=require("../service/uplinks/uplink-storage/UplinkStorage"),a=require("../service/repo/RepoService"),c=require("../packages/config/init"),s=require("../utils/CommonUtil"),l=require("../packages/crypto"),u=require("../packages/config/tableCreate");exports.MainInit=class{static init(e){return i(this,void 0,void 0,(function*(){try{yield(0,c.initMode)(),yield(0,c.initHttpsFiles)(),yield(0,t.initLogger)(),yield(0,l.initKeys)(e),yield(0,u.initDataBase)(),yield o.uplinkStorage.init(),yield a.repoService.chmodUploadTempDir()}catch(i){throw new Error(`fail to initialize: ${i}`)}}))}static particalInit(){return i(this,void 0,void 0,(function*(){yield(0,r.initDB)(e.config.db),yield(0,n.initStorage)(),yield s.CommonUtil.initTempDir()}))}};