"use strict";var e=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),t=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),r=this&&this.__importStar||function(r){if(r&&r.__esModule)return r;var o={};if(null!=r)for(var n in r)"default"!==n&&Object.prototype.hasOwnProperty.call(r,n)&&e(o,r,n);return t(o,r),o},o=this&&this.__awaiter||function(e,t,r,o){return new(r||(r=Promise))((function(n,i){function a(e){try{c(o.next(e))}catch(e){i(e)}}function s(e){try{c(o.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(a,s)}c((o=o.apply(e,t||[])).next())}))};Object.defineProperty(exports,"__esModule",{value:!0}),exports.storageController=void 0;const n=r(require("express")),i=require("./StorageService"),a=require("./DownloadMeta"),s=require("../../packages/log"),c=require("../../packages/config/config"),l=require("../../common/DbAndStoreType"),u=require("../../common/Constants");exports.storageController=new class{constructor(){this.basePath="",this.router=n.Router(),this.initRouter()}initRouter(){this.router.get("/:repoName/:group/:name/-/:group/:nameVersion?/:fileName",this.download),this.router.get("/:repoName/:name/-/:nameVersion?/:fileName",this.download)}download(e,t,r){return o(this,void 0,void 0,(function*(){t.header("Access-Control-Allow-Origin","*"),t.header("Access-Control-Allow-Methods","GET,OPTIONS");const{repoName:o,name:n,fileName:d,nameVersion:g,group:p}=e.params,f=new a.DownloadMeta(o,n,d,g,p);let m;try{if(c.config.store.type===l.StorageType.Custom&&(d.endsWith(u.Constants.HSP_SUFFIX)||d.endsWith(u.Constants.HAR_SUFFIX))){const e=yield i.StorageService.getDownloadFileUrl(f);t.redirect(e)}else{const o=i.StorageService.getDownloadFileName(f);t.setHeader("Content-disposition",`attachment; filename=${o}`),t.setHeader("Content-type","application/octet-stream"),m=yield i.StorageService.getDownloadFileStream(e.url,f),m.pipe(t),m.once("error",(e=>{m.destroy(),s.OhpmLazyLogger.error(`readStream pipe error. downloadMeta: ${JSON.stringify(f)}, error message : ${e.message}`),r(e)}))}}catch(e){null==m||m.destroy(),s.OhpmLazyLogger.error(`download file error. downloadMeta: ${JSON.stringify(f)}, error message : ${e.message}`),r(e)}}))}};