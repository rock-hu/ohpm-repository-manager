"use strict";var e=this&&this.__decorate||function(e,t,r,n){var o,i=arguments.length,a=i<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,r):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,r,n);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(a=(i<3?o(a):i>3?o(t,r,a):o(t,r))||a);return i>3&&a&&Object.defineProperty(t,r,a),a},t=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Group=exports.GROUP_NAME_REGEX=void 0;const r=require("./BaseData"),n=require("../common/CommonValidator"),o=require("../utils/CommonConstants"),i=require("../common/RepoError"),a=require("../common"),s=require("typeorm");exports.GROUP_NAME_REGEX=/^(?=^(?![0-9\-_])[a-z0-9\-_]+(?<![\-_])$).{1,36}$/;let c=class extends r.BaseData{constructor(e){super(e),e&&(this.name=e.name,this.description=e.description,this.owner_id=e.owner_id,this.owner_name=e.owner_name,this.checkAllFields())}setName(e){this.name=e}setDescription(e){this.description=e}setOwnerId(e){this.owner_id=e}setOwnerName(e){this.owner_name=e}getName(){return this.name}getDescription(){return this.description}getOwnerId(){return this.owner_id}getOwnerName(){return this.owner_name}checkAllFields(){if(!this.name||!exports.GROUP_NAME_REGEX.test(this.name)){const e=`Invalid parameter: ${this.name} - group's name can contain only lowercase letters, digits, hyphens (-), and underscores (_), and must start with a lower-case letter and end with a digit or a letter.`;throw new i.RepoClientError(a.ErrorCode.InvalidGroupName,e)}if(n.CommonValidator.checkSQLAndXSSInject("name",this.name),n.CommonValidator.checkLength(a.ErrorCode.InvalidDescriptionLength,"description",this.description,1024,1),n.CommonValidator.checkAllSpace(a.ErrorCode.InvalidSpaceDescription,"description",this.description),n.CommonValidator.checkSQLAndXSSInject("description",this.description),!o.USER_NAME_REGEX.test(this.owner_name))throw new i.RepoClientError(a.ErrorCode.InvalidOwnerName,`Invalid parameter: ${this.owner_name} - a string of up to 30 case-sensitive characters, including letters, digits, and underscores (_). It must start with a letter.`);n.CommonValidator.checkSQLAndXSSInject("owner",this.owner_name)}};e([(0,s.Column)({type:"varchar",length:36}),t("design:type",String)],c.prototype,"name",void 0),e([(0,s.Column)({type:"varchar",length:1024}),t("design:type",String)],c.prototype,"description",void 0),e([(0,s.Column)({type:"varchar",length:64}),t("design:type",String)],c.prototype,"owner_id",void 0),e([(0,s.Column)({type:"varchar",length:64}),t("design:type",String)],c.prototype,"owner_name",void 0),c=e([(0,s.Entity)("group"),t("design:paramtypes",[Object])],c),exports.Group=c;