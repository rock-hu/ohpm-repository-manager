"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.LocalCache=void 0;const e=require("../../packages/log"),t=require("../../utils/CommonConstants"),i=require("../../common/DoublyLinkedList");exports.LocalCache=class{constructor(e=1e6){this.maxMemorySize=e,this.map=new Map,this.expireMap=new Map,this.keyList=new i.DoublyLinkedList,setInterval((()=>{this.clearExpired()}),6e5)}exists(e){if(this.map.has(e)){if(!this.expireMap.has(e))return!0;return this.expireMap.get(e)>Date.now()||(this.delete(e),!1)}return!1}set(e,t,i){if(this.keyList.size()>this.maxMemorySize)throw new Error("cache memory limit exceeded");if(this.map.has(e)?(this.map.set(e,t),this.keyList.moveToEnd(e)):(this.map.set(e,t),this.keyList.add(e)),i){const t=Date.now()+1e3*i;this.expireMap.set(e,t)}}get(i){if(!this.map.has(i))return;if(this.expireMap.has(i)){const s=this.expireMap.get(i);if(Date.now()>s)return i.startsWith(t.LOCK_KEY)&&e.OhpmLazyLogger.info(i.substring(t.LOCK_KEY.length),"automatically unlocking user."),void this.delete(i)}const s=this.map.get(i);return this.keyList.moveToEnd(i),s}delete(e){this.map.has(e)&&(this.map.delete(e),this.keyList.remove(e),this.expireMap.delete(e))}clear(){this.map.clear(),this.keyList.clear(),this.expireMap.clear()}clearExpired(){let i=this.keyList.head.next;for(;i!==this.keyList.tail;){const s=i.key;if(!(this.expireMap.has(s)&&Date.now()>this.expireMap.get(s)))break;s.startsWith(t.LOCK_KEY)&&e.OhpmLazyLogger.info(s.substring(t.LOCK_KEY.length),"automatically unlocking user."),this.delete(s),i=i.next}}};