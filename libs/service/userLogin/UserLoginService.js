"use strict";var e=this&&this.__awaiter||function(e,r,i,o){return new(i||(i=Promise))((function(t,s){function c(e){try{a(o.next(e))}catch(e){s(e)}}function n(e){try{a(o.throw(e))}catch(e){s(e)}}function a(e){var r;e.done?t(e.value):(r=e.value,r instanceof i?r:new i((function(e){e(r)}))).then(c,n)}a((o=o.apply(e,r||[])).next())}))};Object.defineProperty(exports,"__esModule",{value:!0}),exports.userLoginService=void 0;const r=require("../user/UserService"),i=require("../../common"),o=require("../../common/RepoError"),t=require("../../packages/log"),s=require("../../utils/CommonConstants"),c=require("../../plugins/cache/CacheFactory");class n{constructor(){this.cache=c.CacheFactory.createCache({mode:"db"})}userLogin(c,a){return e(this,void 0,void 0,(function*(){const e=yield r.userService.getUser(c,a);let l=[];const u=s.LOCK_KEY+e.id,h=yield this.cache.get(u);h&&(l=h.loginErrorTimes);const d=(new Date).getTime();if(h&&h.isLocked)throw new o.RepoClientError(i.ErrorCode.UserLock,"The account is locked due to 5 failures within 24 hour. Please try again 1 hour later.");if(!(yield r.userService.isValidPassword(a,e))){if(l.length<n.PWD_ERROR_COUNT)l.push(d),yield this.cache.set(u,{isLocked:!1,loginErrorTimes:l},{ttl:s.ONE_DAY_SEC});else if(d-l[0]>s.ONE_DAY_MILL_SEC)l.splice(0,1),l.push(d),yield this.cache.set(u,{isLocked:!1,loginErrorTimes:l},{ttl:s.ONE_DAY_SEC});else if(d-l[0]<=s.ONE_DAY_MILL_SEC)throw l=[],yield this.cache.set(u,{isLocked:!0,loginErrorTimes:l},{ttl:s.ONE_HOUR_SEC}),t.OhpmLazyLogger.info(e.id,"user lock."),new o.RepoClientError(i.ErrorCode.UserLock,"The account is locked due to 5 failures within 24 hour. Please try again 1 hour later.");throw new o.RepoClientError(i.ErrorCode.InvalidUserNameOrPassword,"fail to validate user or password.")}return(yield this.cache.exists(u))&&(yield this.cache.delete(u),t.OhpmLazyLogger.info(e.id,"login success unlock user.")),e}))}}n.PWD_ERROR_COUNT=4,exports.userLoginService=new n;