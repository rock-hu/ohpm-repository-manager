"use strict";var e=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var i=Object.getOwnPropertyDescriptor(t,n);i&&!("get"in i?!t.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,i)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),t=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),n=this&&this.__importStar||function(n){if(n&&n.__esModule)return n;var r={};if(null!=n)for(var i in n)"default"!==i&&Object.prototype.hasOwnProperty.call(n,i)&&e(r,n,i);return t(r,n),r},r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(i,o){function c(e){try{u(r.next(e))}catch(e){o(e)}}function s(e){try{u(r.throw(e))}catch(e){o(e)}}function u(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(c,s)}u((r=r.apply(e,t||[])).next())}))};Object.defineProperty(exports,"__esModule",{value:!0}),exports.SecurityController=void 0;const i=n(require("express")),o=require("./SecurityService"),c=require("../../common"),s=require("../../common/CommonValidator"),u=require("../../common/RepoResponse");class a{static getInstance(){if(!this.Instance){const e=o.SecurityService.getInstance();this.Instance=new a(e),this.Instance.initRouter()}return this.Instance}constructor(e){this.basePath="/api/security",this.router=i.Router(),this.securityService=e}initRouter(){this.router.get("/pre",c.CsrfToken.gen,this.generatePublicKey.bind(this)),this.router.get("/nonce",this.generateNonce.bind(this))}generatePublicKey(e,t,n){return r(this,void 0,void 0,(function*(){const r=e.originalUrl,i=e.ctx.clientIp;try{yield s.CommonValidator.checkApiCount(i,r,a.GENERATE_PUBLIC_KEY_LIMIT_COUNT);const e=yield this.securityService.generatePublicKey(),n={preId:e.keyPairId,preKey:Buffer.from(e.publicKey).toString("base64")};u.RepoResponse.success(t,n)}catch(e){n(e)}}))}generateNonce(e,t,n){return r(this,void 0,void 0,(function*(){const r=e.originalUrl,i=e.ctx.clientIp;try{yield s.CommonValidator.checkApiCount(i,r,a.GENERATE_NONCE);const e={nonce:yield this.securityService.generateNonce()};u.RepoResponse.success(t,e)}catch(e){n(e)}}))}}exports.SecurityController=a,a.GENERATE_PUBLIC_KEY_LIMIT_COUNT=100,a.GENERATE_NONCE=1e5;