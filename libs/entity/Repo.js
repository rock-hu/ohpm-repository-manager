"use strict";var e=this&&this.__decorate||function(e,t,i,r){var n,o=arguments.length,s=o<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,i):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,i,r);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(s=(o<3?n(s):o>3?n(t,i,s):n(t,i))||s);return o>3&&s&&Object.defineProperty(t,i,s),s},t=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.REPO_DB_NAME=exports.Repo=void 0;const i=require("../common/CommonValidator"),r=require("../common/RepoError"),n=require("../common"),o=require("typeorm"),s=require("./Uplink"),a=/^[a-z]{1,30}$/;let p=class{constructor(e){e&&(this.id=e.id,this.name=e.name,this.description=e.description,this.uplink=e.uplink,this.checkAllFields())}setId(e){this.id=e}getId(){return this.id}setName(e){this.name=e}getName(){return this.name}setDescription(e){this.description=e}getDescription(){return this.description}setUplink(e){this.uplink=e}getUplink(){return this.uplink}checkAllFields(){if(!this.name||!a.test(this.name))throw new r.RepoClientError(n.ErrorCode.InvalidRepoName,`Invalid parameter: ${this.name} - the repo's name contains only 1 to 30 lowercase letters.`);if(i.CommonValidator.checkSQLAndXSSInject("name",this.name),"api"===this.name)throw new r.RepoClientError(n.ErrorCode.NotAllowedName,'The repo\'s name cannot be "api".');if(i.CommonValidator.checkLength(n.ErrorCode.InvalidDescriptionLength,"description",this.description,512,1),i.CommonValidator.checkAllSpace(n.ErrorCode.InvalidSpaceDescription,"description",this.description),i.CommonValidator.checkSQLAndXSSInject("description",this.description),this.uplink){if(!s.UPLINK_NAME_REGEX.test(this.uplink))throw new r.RepoClientError(n.ErrorCode.InvalidUplinkName,`Invalid parameter: ${this.uplink} - the uplink's name contains 1 to 30 characters, including only lowercase letters, underscores (_), and hyphens (-).`);i.CommonValidator.checkSQLAndXSSInject("uplink",this.uplink)}}};e([(0,o.PrimaryColumn)({type:"varchar",length:128}),t("design:type",String)],p.prototype,"id",void 0),e([(0,o.Column)({type:"varchar",length:32}),t("design:type",String)],p.prototype,"name",void 0),e([(0,o.Column)({type:"varchar",length:1024}),t("design:type",String)],p.prototype,"description",void 0),e([(0,o.Column)({type:"varchar",length:32}),t("design:type",String)],p.prototype,"uplink",void 0),p=e([(0,o.Entity)("repo"),t("design:paramtypes",[Object])],p),exports.Repo=p,exports.REPO_DB_NAME="repo";