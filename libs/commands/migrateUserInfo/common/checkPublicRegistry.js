"use strict";var t=this&&this.__awaiter||function(t,e,r,i){return new(r||(r=Promise))((function(n,o){function s(t){try{u(i.next(t))}catch(t){o(t)}}function c(t){try{u(i.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?n(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(s,c)}u((i=i.apply(t,e||[])).next())}))},e=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.checkPublicRegistry=void 0;const r=e(require("url")),i=e(require("node-fetch")),n=require("./getPublicRegistryAgent"),o=require("../../../packages/log");exports.checkPublicRegistry=function(e){return t(this,void 0,void 0,(function*(){let s=!0;e&&""!==e||(s=!1),e.startsWith("https://")||e.startsWith("http://")||(s=!1);const c=r.default.parse(String(e));if(c.host||(s=!1),!s)throw new Error('public-registry must contain a full url, including "http://" or "https://"');if(!/https?:\/\/[^/]*\/ohpm\/?/.test(e))throw new Error("public-registry verification error");let u=c.href;"/"===u[u.length-1]&&(u=u.slice(0,u.length-1));const h=c.href.slice(0,c.href.length-c.path.length);return yield function(e){return t(this,void 0,void 0,(function*(){try{const t=yield(0,i.default)(e,{agent:(0,n.getPublicRegistryAgent)(e)});if(!t.ok)throw new Error(`Failed to access ${e}. Server responded with status ${t.status}`);o.OhpmLazyLogger.info(`${e} is accessible.`)}catch(t){throw new Error(`${t.message}. Check your network connectivity or proxy settings.`)}}))}(h),u}))};