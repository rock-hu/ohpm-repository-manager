"use strict";var e=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))((function(o,s){function n(e){try{c(i.next(e))}catch(e){s(e)}}function a(e){try{c(i.throw(e))}catch(e){s(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(n,a)}c((i=i.apply(e,t||[])).next())}))},t=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.AppServer=void 0;const r=t(require("express")),i=require("../packages/log"),o=require("../packages/config/config"),s=require("./Constants"),n=require("../utils/FsUtil"),a=t(require("path")),c=t(require("http")),h=t(require("https")),p=require("crypto"),l=t(require("log4js")),f=t(require("process"));exports.AppServer=class{constructor(e,t,i){this.app=(0,r.default)(),this.initializeMiddleware(e),this.initializeControllers(t),this.initializeErrorHandler(i)}initializeMiddleware(e){for(let t=0;t<e.length;t++)this.app.use(e[t])}initializeControllers(e){e.forEach((e=>{this.app.use(e.basePath,e.router)}))}initializeErrorHandler(e){for(let t=0;t<e.length;t++)this.app.use(e[t])}get(e,...t){this.app.get(e,...t)}post(e,...t){this.app.post(e,...t)}put(e,...t){this.app.put(e,...t)}patch(e,...t){this.app.patch(e,...t)}delete(e,...t){this.app.delete(e,...t)}use(e,...t){this.app.use(e,...t)}static(e,t){this.app.use(e,r.default.static(t))}listen(t,r,n){return e(this,void 0,void 0,(function*(){if("https"===n.toLowerCase())yield this.checkHttps(t,r);else{const e=c.default.createServer(this.app).listen(r,t,(()=>{(0,i.consoleInfo)(`http address - ${t}:${r} - ${s.Constants.NAME}/${s.Constants.VERSION}.`)}));e.on("listening",(()=>{})),e.on("error",(e=>{this.processServerError(e.code,e.message,t,r)})),e.keepAliveTimeout=1e3*o.config.keep_alive_timeout}}))}processServerError(e,t,r,o){"EADDRINUSE"===e?i.OhpmLazyLogger.error("cannot create server,the port is already in use."):"ENOTFOUND"===e?i.OhpmLazyLogger.error(`cannot create server, getaddrinfo not found ${r}.`):"EADDRNOTAVAIL"===e?i.OhpmLazyLogger.error(`cannot create server,address not available ${r}: ${o}.`):i.OhpmLazyLogger.error(`cannot create server,${e} ${t}.`),(0,i.consoleError)("server fail to start."),l.default.shutdown((()=>f.default.exit(1)))}getVerify(){const e=(0,p.createVerify)("SHA256");return e.update("some data to sign"),e.end(),e}getSignature(e){const t=(0,p.createSign)("SHA256");return t.update("some data to sign"),t.end(),t.sign(e)}checkHttps(t,r){return e(this,void 0,void 0,(function*(){if(!o.config.https_key||!o.config.https_cert)throw i.OhpmLazyLogger.error('you have enabled HTTPS and need to specify "https_key" and "https_cert" to run https server.'),new Error("the certificate is wrong");if(!(yield n.FsUtil.exists(a.default.resolve(s.Constants.DATA_DIR,o.config.https_key))))throw i.OhpmLazyLogger.error(`cannot create server,no such file or directory "${o.config.https_key}".`),new Error("the certificate is wrong");if(!(yield n.FsUtil.exists(a.default.resolve(s.Constants.DATA_DIR,o.config.https_cert))))throw i.OhpmLazyLogger.error(`cannot create server,no such file or directory "${o.config.https_cert}".`),new Error("the certificate is wrong");const e=yield n.FsUtil.readFile(a.default.resolve(s.Constants.DATA_DIR,o.config.https_key)),c=yield n.FsUtil.readFile(a.default.resolve(s.Constants.DATA_DIR,o.config.https_cert));if(e.length<2458)throw i.OhpmLazyLogger.error("the length of the certificate is less than 4096."),new Error("the certificate is wrong");if(e.indexOf("PRIVATE KEY")<0)throw i.OhpmLazyLogger.error("the format of the certificate is wrong,you should config a PEM format certificate."),new Error("the certificate is wrong");const l=(0,p.createPrivateKey)(e);try{const e=new p.X509Certificate(c);if(!e.checkPrivateKey(l))throw i.OhpmLazyLogger.error(" cannot create server,the certificate is wrong."),new Error("the certificate is wrong");const t=new Date;if(t<new Date(e.validFrom)||t>new Date(e.validTo))throw i.OhpmLazyLogger.error("the certificate is not within the validity period."),new Error("the certificate is wrong")}catch(e){const t=(0,p.createPublicKey)(c),r=this.getSignature(l);if(!this.getVerify().verify(t,r))throw i.OhpmLazyLogger.error("cannot create server,the certificate is wrong."),new Error("the certificate is wrong")}const f={key:e,cert:c},g=h.default.createServer(f,this.app).listen(r,t,(()=>{(0,i.consoleInfo)(`https address - ${t}:${r} - ${s.Constants.NAME}/${s.Constants.VERSION}.`)}));g.on("listening",(()=>{})),g.on("error",(e=>{this.processServerError(e.code,e.message,t,r)})),g.keepAliveTimeout=1e3*o.config.keep_alive_timeout}))}};