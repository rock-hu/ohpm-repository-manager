"use strict";var e=this&&this.__createBinding||(Object.create?function(e,r,t,o){void 0===o&&(o=t);var i=Object.getOwnPropertyDescriptor(r,t);i&&!("get"in i?!r.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return r[t]}}),Object.defineProperty(e,o,i)}:function(e,r,t,o){void 0===o&&(o=t),e[o]=r[t]}),r=this&&this.__setModuleDefault||(Object.create?function(e,r){Object.defineProperty(e,"default",{enumerable:!0,value:r})}:function(e,r){e.default=r}),t=this&&this.__importStar||function(t){if(t&&t.__esModule)return t;var o={};if(null!=t)for(var i in t)"default"!==i&&Object.prototype.hasOwnProperty.call(t,i)&&e(o,t,i);return r(o,t),o},o=this&&this.__awaiter||function(e,r,t,o){return new(t||(t=Promise))((function(i,d){function a(e){try{c(o.next(e))}catch(e){d(e)}}function s(e){try{c(o.throw(e))}catch(e){d(e)}}function c(e){var r;e.done?i(e.value):(r=e.value,r instanceof t?r:new t((function(e){e(r)}))).then(a,s)}c((o=o.apply(e,r||[])).next())}))};Object.defineProperty(exports,"__esModule",{value:!0}),exports.groupController=void 0;const i=t(require("express")),d=require("../../common"),a=require("./GroupService"),s=require("../repo/PageParam"),c=require("../user/UserService"),u=require("../../packages/log"),n=require("../../common/CommonValidator"),p=require("../adminAuditLog/AdminAuditLogService"),m=require("../../common/OperateType"),l=require("../../common/RepoResponse"),g=require("../../entity/GroupMember"),h=require("../../packages/definitions/types");class y{constructor(){this.basePath="/api/groups",this.router=i.Router(),this.initRouter()}initRouter(){this.router.get("",d.SessionUtil.check,d.CsrfToken.validate,this.getGroupList),this.router.post("",d.SessionUtil.check,d.CsrfToken.validate,this.addGroup),this.router.get("/:id",d.SessionUtil.check,d.CsrfToken.validate,this.getGroupDetail),this.router.put("/:id",d.SessionUtil.check,d.CsrfToken.validate,this.updateGroup),this.router.delete("/:id",d.SessionUtil.check,d.CsrfToken.validate,this.deleteGroup),this.router.post("/:id/group_members",d.SessionUtil.check,d.CsrfToken.validate,this.addMember),this.router.post("/:id/group_admins",d.SessionUtil.check,d.CsrfToken.validate,this.addAdmin),this.router.get("/:id/group_members",d.SessionUtil.check,d.CsrfToken.validate,this.getMemberList),this.router.get("/:id/group_admins",d.SessionUtil.check,d.CsrfToken.validate,this.getAdminList),this.router.delete("/:group_id/members/:group_member_id",d.SessionUtil.check,d.CsrfToken.validate,this.deleteMember),this.router.delete("/:group_id/admins/:group_admin_id",d.SessionUtil.check,d.CsrfToken.validate,this.deleteAdmin),this.router.get("/:id/packages",d.SessionUtil.check,d.CsrfToken.validate,this.getPackageList)}addGroup(e,r,t){return o(this,void 0,void 0,(function*(){const o=e.ctx.userId;e.body.member_id=o;const i=e.originalUrl,d=e.ctx.clientIp;try{yield n.CommonValidator.checkApiCount(d,i,y.ADD_GROUP_LIMIT_COUNT),n.CommonValidator.checkUUID(o),yield c.userService.checkUserIsAdmin(o);const t=new g.GroupMember(e.body);yield a.groupService.addGroup(o,t);const s=u.OhpmLazyLogger.operateSuccess(e,"addGroup");l.RepoResponse.ok(r),yield p.adminAuditLogService.addSuccessLog(o,m.OperateType.addGroup,s)}catch(r){u.OhpmLazyLogger.operateFailure(e,"addGroup"),yield p.adminAuditLogService.addFailureLog(o,m.OperateType.addGroup,r.message),t(r)}}))}getGroupList(e,r,t){return o(this,void 0,void 0,(function*(){try{const t=new s.PageParam(e.query);n.CommonValidator.checkUUID(e.ctx.userId);const o=yield a.groupService.getGroupList(e.ctx.userId,e.query,t);l.RepoResponse.success(r,o)}catch(e){t(e)}}))}getMemberList(e,r,t){return o(this,void 0,void 0,(function*(){try{const t=new s.PageParam(e.query);n.CommonValidator.checkUUID(e.params.id),n.CommonValidator.checkUUID(e.ctx.userId);const o=yield a.groupService.getMemberList(e.params.id,e.ctx.userId,t);l.RepoResponse.success(r,o)}catch(e){t(e)}}))}getGroupDetail(e,r,t){return o(this,void 0,void 0,(function*(){try{n.CommonValidator.checkUUID(e.params.id),n.CommonValidator.checkUUID(e.ctx.userId);const t=yield a.groupService.getGroupDetail(e.params.id,e.ctx.userId);l.RepoResponse.success(r,t)}catch(e){t(e)}}))}getPackageList(e,r,t){return o(this,void 0,void 0,(function*(){try{const t=new s.PageParam(e.query);n.CommonValidator.checkUUID(e.params.id),n.CommonValidator.checkUUID(e.ctx.userId);const o=yield a.groupService.getPackageList(e.params.id,e.ctx.userId,t);l.RepoResponse.success(r,o)}catch(e){t(e)}}))}getAdminList(e,r,t){return o(this,void 0,void 0,(function*(){try{const t=new s.PageParam(e.query);n.CommonValidator.checkUUID(e.params.id),n.CommonValidator.checkUUID(e.ctx.userId);const o=yield a.groupService.getAdminList(e.params.id,e.ctx.userId,t,h.RoleType.Admin);l.RepoResponse.success(r,o)}catch(e){t(e)}}))}addAdmin(e,r,t){return o(this,void 0,void 0,(function*(){const o=e.originalUrl,i=e.ctx.clientIp;try{yield n.CommonValidator.checkApiCount(i,o,y.ADD_GROUP_LIMIT_COUNT),n.CommonValidator.checkUUID(e.params.id),n.CommonValidator.checkUUID(e.ctx.userId),yield a.groupService.addAdmin(e.params.id,e.ctx.userId,e.body.userName);const t=u.OhpmLazyLogger.operateSuccess(e,"addAdminMember");l.RepoResponse.ok(r),yield p.adminAuditLogService.addSuccessLog(e.ctx.userId,m.OperateType.addAdmin,t)}catch(r){u.OhpmLazyLogger.operateFailure(e,"addAdminMember"),yield p.adminAuditLogService.addFailureLog(e.ctx.userId,m.OperateType.addAdmin,r.message),t(r)}}))}deleteAdmin(e,r,t){return o(this,void 0,void 0,(function*(){try{n.CommonValidator.checkUUID(e.params.group_id),n.CommonValidator.checkUUID(e.params.group_admin_id),n.CommonValidator.checkUUID(e.ctx.userId),yield a.groupService.deleteAdmin(e.params.group_id,e.params.group_admin_id,e.ctx.userId);const t=u.OhpmLazyLogger.operateSuccess(e,"deleteAdminMember");l.RepoResponse.ok(r),yield p.adminAuditLogService.addSuccessLog(e.ctx.userId,m.OperateType.deleteAdmin,t)}catch(r){u.OhpmLazyLogger.operateFailure(e,"deleteAdminMember"),yield p.adminAuditLogService.addFailureLog(e.ctx.userId,m.OperateType.deleteAdmin,r.message),t(r)}}))}updateGroup(e,r,t){return o(this,void 0,void 0,(function*(){try{e.body.member_name=e.body.owner;const t=new g.GroupMember(e.body);n.CommonValidator.checkUUID(e.params.id),n.CommonValidator.checkUUID(e.ctx.userId),t.setGroupId(e.params.id),yield a.groupService.updateGroup(e.ctx.userId,t);const o=u.OhpmLazyLogger.operateSuccess(e,"updateGroup");l.RepoResponse.ok(r),yield p.adminAuditLogService.addSuccessLog(e.ctx.userId,m.OperateType.updateGroup,o)}catch(r){u.OhpmLazyLogger.operateFailure(e,"updateGroup"),yield p.adminAuditLogService.addFailureLog(e.ctx.userId,m.OperateType.updateGroup,r.message),t(r)}}))}deleteGroup(e,r,t){return o(this,void 0,void 0,(function*(){try{n.CommonValidator.checkUUID(e.params.id),n.CommonValidator.checkUUID(e.ctx.userId),yield a.groupService.deleteGroup(e.params.id,e.ctx.userId);const t=u.OhpmLazyLogger.operateSuccess(e,"deleteGroup");l.RepoResponse.ok(r),yield p.adminAuditLogService.addSuccessLog(e.ctx.userId,m.OperateType.deleteGroup,t)}catch(r){u.OhpmLazyLogger.operateFailure(e,"deleteGroup"),yield p.adminAuditLogService.addFailureLog(e.ctx.userId,m.OperateType.deleteGroup,r.message),t(r)}}))}addMember(e,r,t){return o(this,void 0,void 0,(function*(){const o=e.originalUrl,i=e.ctx.clientIp;try{yield n.CommonValidator.checkApiCount(i,o,y.ADD_GROUP_LIMIT_COUNT),n.CommonValidator.checkUUID(e.params.id),n.CommonValidator.checkUUID(e.ctx.userId),yield a.groupService.addMember(e.params.id,e.ctx.userId,e.body.userName);const t=u.OhpmLazyLogger.operateSuccess(e,"addMember");l.RepoResponse.ok(r),yield p.adminAuditLogService.addSuccessLog(e.ctx.userId,m.OperateType.addMember,t)}catch(r){u.OhpmLazyLogger.operateFailure(e,"addMember"),yield p.adminAuditLogService.addFailureLog(e.ctx.userId,m.OperateType.addMember,r.message),t(r)}}))}deleteMember(e,r,t){return o(this,void 0,void 0,(function*(){try{n.CommonValidator.checkUUID(e.params.group_id),n.CommonValidator.checkUUID(e.params.group_member_id),n.CommonValidator.checkUUID(e.ctx.userId),yield a.groupService.deleteMember(e.params.group_id,e.params.group_member_id,e.ctx.userId);const t=u.OhpmLazyLogger.operateSuccess(e,"deleteMember");l.RepoResponse.ok(r),yield p.adminAuditLogService.addSuccessLog(e.ctx.userId,m.OperateType.deleteMember,t)}catch(r){u.OhpmLazyLogger.operateFailure(e,"deleteMember"),yield p.adminAuditLogService.addFailureLog(e.ctx.userId,m.OperateType.deleteMember,r.message),t(r)}}))}}y.ADD_GROUP_LIMIT_COUNT=100,exports.groupController=new y;