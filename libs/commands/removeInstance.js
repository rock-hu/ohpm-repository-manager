"use strict";var e=this&&this.__awaiter||function(e,t,o,n){return new(o||(o=Promise))((function(r,i){function s(e){try{a(n.next(e))}catch(e){i(e)}}function c(e){try{a(n.throw(e))}catch(e){i(e)}}function a(e){var t;e.done?r(e.value):(t=e.value,t instanceof o?t:new o((function(e){e(t)}))).then(s,c)}a((n=n.apply(e,t||[])).next())}))},t=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.removeInstanceCmd=void 0;const o=require("../packages/log"),n=require("./install"),r=require("../utils/FsUtil"),i=require("../packages/config/config"),s=require("../common/Constants"),c=require("../packages/config/checker"),a=require("../common/DbFactory"),u=require("../packages/config/constants"),f=require("../common/DbAndStoreType"),l=require("../plugins/storage/SftpStorage"),p=require("./stop"),d=t(require("log4js")),m=require("../common/CommandsUtil"),y=require("../plugins/storage/customStorage/CustomStorage");exports.removeInstanceCmd=function(){return e(this,void 0,void 0,(function*(){try{yield function(){return e(this,void 0,void 0,(function*(){const t=(0,i.getEnvironmentVariable)(s.Constants.DEPLOY_ROOT_ENV),g=yield(0,n.readCongFileFromEnv)();if(!(yield r.FsUtil.exists(g)))throw new Error(`file "config.yaml" in deployRoot path ${t} not exist`);if(yield(0,i.parseAndUpdateGlobalConfig)(g),yield(0,c.checkAndUpdateConfig)(i.config),i.config.db.type!==f.DbType.Mysql||i.config.store.type!==f.StorageType.Sftp&&i.config.store.type!==f.StorageType.Custom)throw new Error(`only ${u.ConfigItemNames.DB}'s type is "${f.DbType.Mysql}" and ${u.ConfigItemNames.STORE}'s type is "${f.StorageType.Sftp}" or "${f.StorageType.Custom}" can use this operation`);yield(0,m.confirmSubmit)(`this operation will stop the current service and delete the instance information from ${i.config.db.type} and ${i.config.store.type}, please confirm whether to continue the remove instance operation, continue? (Y/N)`,function(){return()=>e(this,void 0,void 0,(function*(){try{yield(0,p.stopExecute)(),(0,o.consoleInfo)('stop "ohpm-repo" successfully.')}catch(e){(0,o.consoleInfo)(`fail to stop "ohpm-repo": ${e.message}.`)}try{if(yield(0,a.initDB)(i.config.db),i.config.store.type===f.StorageType.Sftp){const e=new l.SftpStorage;yield e.removeInstance()}else i.config.store.type===f.StorageType.Custom&&(yield y.CustomStorage.removeInstance());(0,o.consoleInfo)("remove instance successfully."),d.default.shutdown((()=>process.exit(0)))}catch(e){(0,o.consoleError)(`server fail to remove instance: ${e}.`),d.default.shutdown((()=>process.exit(1)))}}))}())}))}()}catch(e){(0,o.consoleError)(`server fail to remove instance: ${e}.`),d.default.shutdown((()=>process.exit(1)))}}))};