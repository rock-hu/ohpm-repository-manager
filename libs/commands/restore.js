"use strict";var e=this&&this.__awaiter||function(e,t,o,r){return new(o||(o=Promise))((function(i,n){function s(e){try{c(r.next(e))}catch(e){n(e)}}function a(e){try{c(r.throw(e))}catch(e){n(e)}}function c(e){var t;e.done?i(e.value):(t=e.value,t instanceof o?t:new o((function(e){e(t)}))).then(s,a)}c((r=r.apply(e,t||[])).next())}))},t=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.restoreExecute=exports.restoreCmd=exports.checkPackedFile=exports.getConfig=exports.extractOperation=exports.isConfigFile=void 0;const o=t(require("path")),r=require("../utils/FsUtil"),i=require("../utils/PackUtil"),n=require("./start"),s=require("./stop"),a=require("../common/Constants"),c=require("../packages/log"),l=require("../common/CommandsUtil"),u=require("./pack"),f=require("./install"),d=require("../packages/config/config"),p=require("../packages/config/init"),h=require("../packages/config/constants"),m=require("../common/DbAndStoreType"),y=t(require("log4js")),v=t(require("semver"));exports.isConfigFile=e=>["conf/config.yaml","conf\\config.yaml"].includes(e);const g=t=>e(void 0,void 0,void 0,(function*(){return!!t.some(exports.isConfigFile)&&t.some((e=>e.startsWith("meta")))}));function E(t,n,s){return e(this,void 0,void 0,(function*(){yield(0,i.extract)(t,((e,t)=>s&&e.startsWith(u.DB_FOLDER_NAME)?o.default.resolve(n,s,o.default.relative(u.DB_FOLDER_NAME,t.name)):o.default.resolve(n,t.name)),(t=>e(this,void 0,void 0,(function*(){return((t,i,n)=>e(void 0,void 0,void 0,(function*(){const e={recursive:!0,force:!0};if(n&&t.some((e=>e.startsWith(u.DB_FOLDER_NAME))))return yield r.FsUtil.rm(n,e),t.filter((e=>e.startsWith(u.DB_FOLDER_NAME)));if(!n){const n=o.default.resolve(i,"./conf"),s=o.default.resolve(i,"./meta");return yield r.FsUtil.rm(n,e),yield r.FsUtil.rm(s,e),t.filter((e=>e.startsWith("conf")||e.startsWith("meta")))}return[]})))(t,n,s)})))).catch((e=>{throw new Error(`fail to extract: ${e}`)}))}))}function x(t){return e(this,void 0,void 0,(function*(){const e=o.default.join(t,h.PathConstants.CONFIG_PATH);return yield(0,d.parseConfigFile)(e)}))}function F(t){return e(this,void 0,void 0,(function*(){if(!(yield r.FsUtil.exists(t)))throw new Error("path of packed file does not exist");if(".zip"!==o.default.extname(t))throw new Error("packed file should be a `.zip` file");if(!(yield(0,i.checkFile)(t,g)))throw new Error("the packed file is corrupted")}))}function w(t){return e(this,void 0,void 0,(function*(){const i=process.cwd(),u=yield(0,f.readFileFromEnv)(h.PathConstants.RUNTIME_PATH);if(!(yield r.FsUtil.exists(u)))throw new Error("please run `ohpm-repo start` before this operation");const g=(0,d.getEnvironmentVariable)(a.Constants.DEPLOY_ROOT_ENV);if((0,r.isSubdirectory)(i,g))throw new Error(`current working directory ${i} is a subdirectory of deploy root`);yield F(t),yield(0,l.confirmSubmit)("this operation will REPLACE files in the deploy directory(FileDB directory if using FileDB), please run `ohpm pack` before restore, continue? (Y/N)",function(t,r){return()=>e(this,void 0,void 0,(function*(){try{yield(0,d.updateLogPathFromZipFile)(t,r)}catch(e){(0,c.consoleError)(`server fail to restore: fail to obtain the log path information from the zip package "${r}": ${e}.`),y.default.shutdown((()=>process.exit(1)))}try{yield(0,s.stopExecute)(),(0,c.consoleInfo)('stop "ohpm-repo" successfully.')}catch(e){(0,c.consoleInfo)(`fail to stop "ohpm-repo": ${e.message}.`)}try{c.OhpmLazyLogger.info(`extract files to ${t}.`),yield E(r,t,null);const e=yield x(t),i=e.db.type===m.DbType.FileDb?e.db.config.path:null;i&&(yield E(r,t,i)),c.OhpmLazyLogger.info("extract success."),yield(0,p.modifyYamlFile)(o.default.join(t,h.PathConstants.CONFIG_PATH),"deploy_root",t);const s=e.ohpm_repo_version;if(!s||!v.default.lte(s,a.Constants.VERSION)||v.default.major(s)!==v.default.major(a.Constants.VERSION))throw new Error("unable to restore the pack file because the version of ohpm-repo from which the pack file was generated is newer than the current ohpm-repo or does not belong to the same major version");yield(0,p.modifyYamlFile)(o.default.join(t,h.PathConstants.CONFIG_PATH),h.ConfigItemNames.OHPM_REPO_VERSION,a.Constants.VERSION),v.default.lt(s,a.Constants.VERSION)&&c.OhpmLazyLogger.info(`version upgrade: ohpm-repo's version is upgraded from "${s}" to "${a.Constants.VERSION}".`),yield(0,n.startExecute)()}catch(e){(0,c.consoleError)(`server fail to restore: ${e}.`),y.default.shutdown((()=>process.exit(1)))}}))}(g,t))}))}exports.extractOperation=E,exports.getConfig=x,exports.checkPackedFile=F,exports.restoreCmd=function(t){return e(this,void 0,void 0,(function*(){try{yield w(t)}catch(e){(0,c.consoleError)(`server fail to restore: ${e}.`),y.default.shutdown((()=>process.exit(1)))}}))},exports.restoreExecute=w;