"use strict";var e=this&&this.__createBinding||(Object.create?function(e,t,i,r){void 0===r&&(r=i);var n=Object.getOwnPropertyDescriptor(t,i);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[i]}}),Object.defineProperty(e,r,n)}:function(e,t,i,r){void 0===r&&(r=i),e[r]=t[i]}),t=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(i){if(i&&i.__esModule)return i;var r={};if(null!=i)for(var n in i)"default"!==n&&Object.prototype.hasOwnProperty.call(i,n)&&e(r,i,n);return t(r,i),r},r=this&&this.__awaiter||function(e,t,i,r){return new(i||(i=Promise))((function(n,s){function o(e){try{a(r.next(e))}catch(e){s(e)}}function c(e){try{a(r.throw(e))}catch(e){s(e)}}function a(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(o,c)}a((r=r.apply(e,t||[])).next())}))};Object.defineProperty(exports,"__esModule",{value:!0}),exports.ValidationConfigController=void 0;const n=require("./ValidationConfigService"),s=i(require("express")),o=require("../../common"),c=require("../user/UserService"),a=require("../../common/RepoResponse"),u=require("../../packages/log"),d=require("../adminAuditLog/AdminAuditLogService"),l=require("../../common/OperateType");class h{static getInstance(){if(!this.Instance){const e=n.ValidationConfigService.getInstance();this.Instance=new h(e),this.Instance.initRouter()}return this.Instance}constructor(e){this.basePath="/api/validation",this.router=s.Router(),this.service=e}initRouter(){this.router.get("",o.SessionUtil.check,o.CsrfToken.validate,this.getConfigs.bind(this)),this.router.post("",o.SessionUtil.check,o.CsrfToken.validate,this.saveConfigs.bind(this))}getConfigs(e,t,i){return r(this,void 0,void 0,(function*(){try{yield c.userService.checkUserIsAdmin(e.ctx.userId);const i=yield this.service.getConfigs();a.RepoResponse.success(t,i)}catch(e){i(e)}}))}saveConfigs(e,t,i){return r(this,void 0,void 0,(function*(){try{yield c.userService.checkUserIsAdmin(e.ctx.userId);const i=e.body;yield this.service.checkConfigs(i),yield this.service.saveConfigs(i);const r=u.OhpmLazyLogger.operateSuccess(e,"updateCheckRule");a.RepoResponse.ok(t),yield d.adminAuditLogService.addSuccessLog(e.ctx.userId,l.OperateType.checksRule,r)}catch(t){u.OhpmLazyLogger.operateFailure(e,"updateCheckRule"),yield d.adminAuditLogService.addFailureLog(e.ctx.userId,l.OperateType.checksRule,t.message),i(t)}}))}}exports.ValidationConfigController=h;