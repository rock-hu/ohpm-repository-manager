"use strict";var r=this&&this.__awaiter||function(r,o,e,n){return new(e||(e=Promise))((function(t,i){function u(r){try{p(n.next(r))}catch(r){i(r)}}function c(r){try{p(n.throw(r))}catch(r){i(r)}}function p(r){var o;r.done?t(r.value):(o=r.value,o instanceof e?o:new e((function(r){r(o)}))).then(u,c)}p((n=n.apply(r,o||[])).next())}))};Object.defineProperty(exports,"__esModule",{value:!0}),exports.uplinkProxyRepository=void 0;const o=require("../../../common/DbFactory"),e=require("../../../common/RepoError"),n=require("../../../common");class t{getList(i=1,u=1){return r(this,void 0,void 0,(function*(){const r={pageQuery:{pageNum:i,pageSize:u}};try{return o.commonDB.findByFilter(t.TABLE_NAME,r)}catch(r){throw new e.RepoServerError(n.ErrorCode.FindUplinkProxyError,"Fail to find uplink_proxy!",r)}}))}insert(i){return r(this,void 0,void 0,(function*(){try{return o.commonDB.insertOne(t.TABLE_NAME,i)}catch(r){throw new e.RepoServerError(n.ErrorCode.SaveUplinkProxyError,"Fail to insert uplink_proxy!",r)}}))}findById(i){return r(this,void 0,void 0,(function*(){try{return o.commonDB.findById(t.TABLE_NAME,i)}catch(r){throw new e.RepoServerError(n.ErrorCode.FindUplinkProxyError,`Fail to find uplink_proxy whose id is ${i}!`,r)}}))}updateById(i){return r(this,void 0,void 0,(function*(){try{return o.commonDB.updateById(t.TABLE_NAME,i.id,i)}catch(r){throw new e.RepoServerError(n.ErrorCode.UpdateUplinkProxyError,"Fail to update uplink_proxy!",r)}}))}}t.TABLE_NAME="uplink_proxy",exports.uplinkProxyRepository=new t;