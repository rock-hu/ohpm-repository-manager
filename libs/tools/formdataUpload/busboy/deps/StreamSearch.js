"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.StreamSearch=void 0;exports.StreamSearch=class{constructor(e,t){if("function"!=typeof t)throw new Error("Missing match callback");if("string"==typeof e)e=Buffer.from(e);else if(!Buffer.isBuffer(e))throw new Error("Expected Buffer for needle, got "+typeof e);const i=e.length;this.maxMatches=1/0,this.matches=0,this._cb=t,this._lookbehindSize=0,this._needle=e,this._bufPos=0,this._lookbehind=Buffer.allocUnsafe(i),this._occ=[];for(let e=0;e<256;e++)this._occ[e]=i;if(i>1)for(let t=0;t<i-1;++t)this._occ[e[t]]=i-1-t}feed(e){const t=e.length,i=this._needle,s=i.length;let h=-this._lookbehindSize;const o=s-1,r=i[o],n=t-s,f=this._occ,c=this._lookbehind;if(h<0){for(;h<0&&h<=n;){const t=h+o,i=t<0?c[this._lookbehindSize+t]:e[t];if(i===r&&this.matchNeedle(e,h,o))return this._lookbehindSize=0,++this.matches,h>-this._lookbehindSize?this._cb(!0,c,0,this._lookbehindSize+h,!1):this._cb(!0,void 0,0,0,!0),this._bufPos=h+s;h+=f[i]}for(;h<0&&!this.matchNeedle(e,h,t-h);)++h;if(h<0){const i=this._lookbehindSize+h;return i>0&&this._cb(!1,c,0,i,!1),this._lookbehindSize-=i,c.copy(c,0,i,this._lookbehindSize),c.set(e,this._lookbehindSize),this._lookbehindSize+=t,this._bufPos=t,t}this._cb(!1,c,0,this._lookbehindSize,!1),this._lookbehindSize=0}h+=this._bufPos;const _=i[0];for(;h<=n;){const t=e[h+o];if(t===r&&e[h]===_&&this.memcmp(i,0,e,h,o))return++this.matches,h>0?this._cb(!0,e,this._bufPos,h,!0):this._cb(!0,void 0,0,0,!0),this._bufPos=h+s;h+=f[t]}for(;h<t;){if(e[h]===_&&this.memcmp(e,h,i,0,t-h)){e.copy(c,0,h,t),this._lookbehindSize=t-h;break}++h}return h>0&&this._cb(!1,e,this._bufPos,h<t?h:t,!0),this._bufPos=t,t}matchNeedle(e,t,i){const s=this._lookbehind,h=this._lookbehindSize,o=this._needle;for(let r=0;r<i;++r,++t){if((t<0?s[h+t]:e[t])!==o[r])return!1}return!0}memcmp(e,t,i,s,h){for(let o=0;o<h;++o)if(e[t+o]!==i[s+o])return!1;return!0}reset(){this.matches=0,this._lookbehindSize=0,this._bufPos=0}push(e,t){let i;Buffer.isBuffer(e)||(e=Buffer.from(e,"latin1"));const s=e.length;for(this._bufPos=t||0;i!==s&&this.matches<this.maxMatches;)i=this.feed(e);return i}destroy(){const e=this._lookbehindSize;this._lookbehindSize&&this._cb(!1,this._lookbehind,0,e,!1),this.reset()}};