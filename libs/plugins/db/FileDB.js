"use strict";var e=this&&this.__awaiter||function(e,t,i,r){return new(i||(i=Promise))((function(o,d){function n(e){try{s(r.next(e))}catch(e){d(e)}}function a(e){try{s(r.throw(e))}catch(e){d(e)}}function s(e){var t;e.done?o(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(n,a)}s((r=r.apply(e,t||[])).next())}))},t=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.FileDB=void 0;const i=require("./InterfaceDB"),r=t(require("path")),o=t(require("lodash")),d=require("../../common/RepoError"),n=require("../../common"),a=require("../../common/Constants"),s=require("../../utils/FsUtil"),l=require("../../packages/config/init");class u{constructor(e){this.tableFile=e}read(){return e(this,void 0,void 0,(function*(){(yield s.FsUtil.exists(this.tableFile))?this.data=yield s.FsUtil.readJSON(this.tableFile):this.data=[]}))}write(){return e(this,void 0,void 0,(function*(){yield s.FsUtil.writeFile(this.tableFile,JSON.stringify(this.data,null,2))}))}}class c{constructor(){this.tableMap={}}static getInstance(t){return e(this,void 0,void 0,(function*(){if(!t.path||t.path.includes(".."))throw new Error('fail to initialize local db, invalid path, path cannot be empty or contain ".."');const e=new c,i=r.default.resolve(a.Constants.DATA_DIR,t.path);return yield e.init({dbDir:i}),e}))}static paginate(e,t,i){const r=((t=Number(t))-1)*(i=Number(i));let o=r+i;return o>e.length&&(o=e.length),e.slice(r,o)}static filterFunc(e){return function(t){const r=Object.keys(e);for(const a of r){const r=e[a];if("object"!==typeof r){if(!o.default.eq(t[a],r))return!1;continue}const s=Object.keys(r);for(const e of s){const o=r[e],s=i.OperatorFuncMap[e];if(!s)throw new d.RepoServerError(n.ErrorCode.LocalDataBaseError,`invalid operator ${e}`);if(!s(t[a],o))return!1}}return!0}}init(t){return e(this,void 0,void 0,(function*(){this.dbDir=t.dbDir,yield s.FsUtil.createDirIfNotExists(this.dbDir),yield s.FsUtil.chmod(this.dbDir,488)}))}hasTable(t){return e(this,void 0,void 0,(function*(){const e=r.default.join(this.dbDir,`${t}.json`);return s.FsUtil.exists(e)}))}insertOne(t,i,r=!1){return e(this,void 0,void 0,(function*(){if(!r&&!(yield(0,l.judgeReadWriteMode)()))throw new d.RepoServerError(n.ErrorCode.NoModifyPermission,"mode input is readOnly, can not modify data");const e=yield this.getTable(t);e.data.push(i),yield e.write()}))}findByFilter(t,i){return e(this,void 0,void 0,(function*(){let e=(yield this.getTable(t)).data;i&&i.filter&&(e=o.default.filter(e,c.filterFunc(i.filter)));const r=e.length;return i.orderBy&&(e=o.default.orderBy(e,i.orderBy.keyList,i.orderBy.orderList)),i.pageQuery&&(e=c.paginate(e,i.pageQuery.pageNum,i.pageQuery.pageSize)),i.pick&&(e=o.default.map(e,(e=>o.default.pick(e,i.pick)))),{total:r,recordList:e}}))}clearTable(t,i=!1){return e(this,void 0,void 0,(function*(){if(!i&&!(yield(0,l.judgeReadWriteMode)()))throw new d.RepoServerError(n.ErrorCode.NoModifyPermission,"mode input is readOnly, can not modify data");const e=yield this.getTable(t);e.data.length&&(e.data=[],yield e.write())}))}findById(t,i){return e(this,void 0,void 0,(function*(){const e=yield this.getTable(t);return o.default.find(e.data,{id:i})}))}deleteByKey(t,i,r,a=!1){return e(this,void 0,void 0,(function*(){if(!a&&!(yield(0,l.judgeReadWriteMode)()))throw new d.RepoServerError(n.ErrorCode.NoModifyPermission,"mode input is readOnly, can not modify data");const e=yield this.getTable(t);o.default.remove(e.data,(e=>e[r]===i)),yield e.write()}))}deleteByQueryFilter(t,i,r){return e(this,void 0,void 0,(function*(){if(!r&&!(yield(0,l.judgeReadWriteMode)()))throw new d.RepoServerError(n.ErrorCode.NoModifyPermission,"mode input is readOnly, can not modify data");const e=yield this.getTable(t);o.default.remove(e.data,c.filterFunc(i)),yield e.write()}))}deleteById(t,i,r=!1){return e(this,void 0,void 0,(function*(){if(!r&&!(yield(0,l.judgeReadWriteMode)()))throw new d.RepoServerError(n.ErrorCode.NoModifyPermission,"mode input is readOnly, can not modify data");const e=yield this.getTable(t);o.default.remove(e.data,(e=>e.id===i)),yield e.write()}))}deleteByRangeKey(t,i,r,a,s=!1){return e(this,void 0,void 0,(function*(){if(!s&&!(yield(0,l.judgeReadWriteMode)()))throw new d.RepoServerError(n.ErrorCode.NoModifyPermission,"mode input is readOnly, can not modify data");const e=yield this.getTable(t);o.default.remove(e.data,(e=>{const t=Number(e[i]);return void 0===a?t>r:t>r&&t<=a})),yield e.write()}))}updateById(t,i,r,o=!1){return e(this,void 0,void 0,(function*(){if(!o&&!(yield(0,l.judgeReadWriteMode)()))throw new d.RepoServerError(n.ErrorCode.NoModifyPermission,"mode input is readOnly, can not modify data");const e=yield this.getTable(t);e.data=e.data.map((e=>(e.id===i&&(e=r),e))),yield e.write()}))}upsertOne(t,i,r=!1){return e(this,void 0,void 0,(function*(){if(!r&&!(yield(0,l.judgeReadWriteMode)()))throw new d.RepoServerError(n.ErrorCode.NoModifyPermission,"mode input is readOnly, can not modify data");const e={id:i.id};return(yield this.findByFilter(t,{filter:e})).recordList.length>0?this.updateById(t,i.id,i):this.insertOne(t,i)}))}getTable(t){return e(this,void 0,void 0,(function*(){if(this.tableMap[t])return this.tableMap[t];const e=r.default.join(this.dbDir,`${t}.json`),i=new u(e);return yield i.read(),i.data=i.data||[],this.tableMap[t]=i,i}))}}exports.FileDB=c;